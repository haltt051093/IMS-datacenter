@model ProcessRequestAssignIPViewModel
@{
    ViewBag.Title = "RequestAssignIPInfo";
}

<section class="content-header">
    <h1>
        Detail Request Assign IP Address
    </h1>
    <ol class="breadcrumb">
        <li><a href="@Url.Action("Index", "Schedule")"><i class="fa fa-dashboard"></i> Home</a></li>
        <li>Detail Request</li>
        <li class="active">Assign IP Address</li>
    </ol>
</section>
<section class="main-content">
    @using (Html.BeginForm("CancelRequestAssignIp", "Request", FormMethod.Post))
    {
        <div class="@Constants.HtmlFormat.FORM_ROW_CLASS">
            <div class="@Constants.HtmlFormat.FORM_ROW_CLASS">
                <div class="@Constants.HtmlFormat.FORM_LABEL_CLASS">
                    @Html.LabelFor(model => model.RequestInfo.RequestCode)
                </div>
                <div class="@Constants.HtmlFormat.FORM_CONTROL_CLASS">
                    @Html.DisplayFor(model => model.RequestInfo.RequestCode, new { @class = Constants.HtmlFormat.FORM_INNER_CLASS })
                </div>
            </div>
            <div class="@Constants.HtmlFormat.FORM_ROW_CLASS">
                <div class="@Constants.HtmlFormat.FORM_LABEL_CLASS">
                    @Html.LabelFor(model => model.RequestInfo.StatusName)
                </div>
                <div class="@Constants.HtmlFormat.FORM_CONTROL_CLASS">
                    @Html.DisplayFor(model => model.RequestInfo.StatusName, new { @class = Constants.HtmlFormat.FORM_INNER_CLASS })
                </div>
            </div>
            <div class="@Constants.HtmlFormat.FORM_ROW_CLASS">
                <div class="@Constants.HtmlFormat.FORM_LABEL_CLASS">
                    @Html.LabelFor(model => model.RequestInfo.RequestedTime)
                </div>
                <div class="@Constants.HtmlFormat.FORM_CONTROL_CLASS">
                    @Html.DisplayFor(model => model.RequestInfo.RequestedTime, new { @class = Constants.HtmlFormat.FORM_INNER_CLASS })
                </div>
            </div>
            <div class="@Constants.HtmlFormat.FORM_ROW_CLASS">
                <div class="@Constants.HtmlFormat.FORM_LABEL_CLASS">
                    @Html.LabelFor(model => model.RequestInfo.Description)
                </div>
                <div class="@Constants.HtmlFormat.FORM_CONTROL_CLASS">
                    @Html.DisplayFor(model => model.RequestInfo.Description, new { @class = Constants.HtmlFormat.FORM_INNER_CLASS })
                </div>
            </div>
        </div>
        <hr />
        <div class="@Constants.HtmlFormat.FORM_ROW_CLASS">
            <div class="@Constants.HtmlFormat.FORM_LABEL_CLASS">
                @Html.LabelFor(model => model.NumberOfIP)
            </div>
            <div class="@Constants.HtmlFormat.FORM_CONTROL_CLASS">
                @Html.DisplayFor(model => model.NumberOfIP, new { @class = Constants.HtmlFormat.FORM_INNER_CLASS })
                @Html.HiddenFor(model => model.NumberOfIP)
            </div>
        </div>
        <div class="@Constants.HtmlFormat.FORM_ROW_CLASS">
            <div class="@Constants.HtmlFormat.FORM_LABEL_CLASS">
                @Html.LabelFor(model => model.SelectedServer)
            </div>
            <div class="@Constants.HtmlFormat.FORM_CONTROL_CLASS">
                @Html.ActionLink(Model.SelectedServer, "Detail", "Server",
                    new { code = Model.SelectedServer }, null)
                @Html.HiddenFor(model => model.SelectedServer)
            </div>
        </div>
        if (Model.RequestInfo.StatusCode == Constants.StatusCode.REQUEST_DONE)
        {
            <div class="@Constants.HtmlFormat.FORM_ROW_CLASS">
                <div class="@Constants.HtmlFormat.FORM_LABEL_CLASS">
                    @Html.LabelFor(model => model.IPs)
                </div>
                <div class="@Constants.HtmlFormat.FORM_CONTROL_CLASS">
                    @foreach (var item in Model.IPs)
                    {
                        @Html.DisplayFor(model => item, new { @class = Constants.HtmlFormat.FORM_INNER_CLASS })
                        <br />
                    }
                </div>
            </div>
        }
        <div class="@Constants.HtmlFormat.FORM_ROW_CLASS">
            <div class="@Constants.HtmlFormat.FORM_LABEL_CLASS">
            </div>
            <div class="@Constants.HtmlFormat.FORM_CONTROL_CLASS">
                @Html.HiddenFor(model => model.RequestInfo.RequestCode)
                @Html.HiddenFor(model => model.CustomerInfo.Customer)
                @Html.HiddenFor(x => x.RequestInfo.RequestType)
                @if ((Model.RequestInfo.StatusCode == Constants.StatusCode.REQUEST_PENDING ||
                    Model.RequestInfo.StatusCode == Constants.StatusCode.REQUEST_PROCESSING) && User.IsInRole("Customer"))
                {
                    <button type="submit" id="btnCancel" name="@Constants.FormAction.CANCEL_ACTION" value="@Constants.FormAction.CANCEL_ACTION" class="@Constants.HtmlFormat.DANGER_BUTTON_CLASS">
                        @Labels.Cancel
                    </button>
                }
            </div>
        </div>
    }
</section>
<script type="text/javascript">
    $(function () {
        $('#btnApprove').on('click', function () {
            $('#selectedIps').find('option').attr('selected', true);
        });
        $('#availableIps').dblclick(function () {
            var pass = $('#availableIps').val();
            $('#selectedIps').append('<option value="' + pass + '">' + pass + '</option>');
            $("[id*=availableIps] option:selected").remove();
            return false;
            //document.getElementById("selectedIps").value = pass;
        });

        $('#selectedIps').dblclick(function () {
            //var count = $('#selectedIps option:selected').length;
            //args.IsValid = count > 0 && count <= 5;
            var pass = $('#selectedIps').val();
            var ipNumber = $('#IpNumber').val();
            $('#availableIps').append('<option value="' + pass + '">' + pass + '</option>');
            $("[id*=selectedIps] option:selected").remove();
            // Check if the parent has reached the limit of selected items.
            if ($(this).parent().val().length >= ipNumber) {
                // Removed the selected attribute from this option.
                $(this).remdaoveAttr("selected");
                //remove gia tri duoc chon khoi list
            }
        });
    });

</script>