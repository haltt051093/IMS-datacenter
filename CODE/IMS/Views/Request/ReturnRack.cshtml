@model RequestReturnRackViewModel
@{
    ViewBag.Title = Pages.RequestReturnRack;
    ViewBag.PageTitle = Pages.RequestReturnRack;
    ViewBag.Breadcrumbs = new List<BreadcrumbModel>
    {
        new BreadcrumbModel("Home", "Index", Pages.Home),
        new BreadcrumbModel("Request", "Index", Pages.Request),
        new BreadcrumbModel("Request", "Create", Pages.RequestCreate),
        new BreadcrumbModel("Request", "Create", Pages.RequestReturnRack, new { Type = Constants.RequestTypeCode.RENT_RACK })
    };
}

<section class="main-content">
    @using (Html.BeginForm("ReturnRack", "Request", FormMethod.Post))
    {
        <div class="row">
            <div class="col-xs-6">
                <label>Select Rack: </label>
                @Html.HiddenFor(model => model.SelectedRacks, new { id = "selectedRacks" })
            </div>
        </div>
        <div class="row">
            <div class="col-xs-12">
                <table id="MyTable" class="table">
                    <thead>
                        <tr>
                            <th>
                                <input type="checkbox" id="checkAll" /> Select All
                            </th>
                            <th>
                                Rack
                            </th>
                            <th>
                                Number of server(s)
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int i = 0; i < Model.AllRacks.Count; i++)
                        {
                            <tr class="check" rack-code="@Model.AllRacks[i].RackCode">
                                <td>
                                    @if (Model.AllRacks[i].ServerNum != 0)
                                    {
                                        @Html.CheckBoxFor(modelItem => Model.AllRacks[i].Checked, new { disabled = "disabled" })
                                    }
                                    else
                                    {
                                        @Html.CheckBoxFor(modelItem => Model.AllRacks[i].Checked)
                                    }
                                </td>
                                <td>
                                    @Html.DisplayFor(model => Model.AllRacks[i].RackName)
                                    @Html.HiddenFor(model => Model.AllRacks[i].RackName)
                                    @Html.HiddenFor(model => Model.AllRacks[i].RackCode)
                                </td>
                                <td class="cannotclick">
                                    @Html.DisplayFor(model => Model.AllRacks[i].ServerNum)
                                    @if (Model.AllRacks[i].ServerNum != 0)
                                    {
                                        <a href="#">Return all servers</a>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <div class="row">
            <div class="col-xs-2">
                <label>Note</label>
            </div>
            <div class="col-xs-10">
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
            </div>
        </div>
        <div class="row">
            <div class="col-xs-12">
                <button type="submit" class="btn btn-primary" id="btnSend">Send</button>
            </div>
        </div>
    }
</section>

<script>
    $("#checkAll").change(function () {
        var state = $('#checkAll').is(':checked');
        $('tr.check input[type="checkbox"]:not(:disabled)').prop('checked', state);
    });
</script>
