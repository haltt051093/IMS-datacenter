@model ProcessRequestReturnRackViewModel
@{
    ViewBag.Title = "RequestReturnRackInfo";
}

<section class="content-header">
    <h1>
        Detail Request Return Rack
    </h1>
    <ol class="breadcrumb">
        <li><a href="@Url.Action("Index", "Schedule")">><i class="fa fa-dashboard"></i> Home</a></li>
        Detail Request:
        <li class="active">Return Rack</li>
    </ol>
</section>
<section class="main-contentcontent">
    @using (Html.BeginForm("CancelRequestReturnRack", "Request", FormMethod.Post))
    {
        <div class="@Constants.HtmlFormat.FORM_ROW_CLASS">
            <div class="@Constants.HtmlFormat.FORM_ROW_CLASS">
                <div class="@Constants.HtmlFormat.FORM_LABEL_CLASS">
                    @Html.LabelFor(model => model.RequestInfo.RequestCode)
                </div>
                <div class="@Constants.HtmlFormat.FORM_CONTROL_CLASS">
                    @Html.DisplayFor(model => model.RequestInfo.RequestCode, new { @class = Constants.HtmlFormat.FORM_INNER_CLASS })
                </div>
            </div>
            <div class="@Constants.HtmlFormat.FORM_ROW_CLASS">
                <div class="@Constants.HtmlFormat.FORM_LABEL_CLASS">
                    @Html.LabelFor(model => model.RequestInfo.StatusName)
                </div>
                <div class="@Constants.HtmlFormat.FORM_CONTROL_CLASS">
                    @Html.DisplayFor(model => model.RequestInfo.StatusName, new { @class = Constants.HtmlFormat.FORM_INNER_CLASS })
                </div>
            </div>
            <div class="@Constants.HtmlFormat.FORM_ROW_CLASS">
                <div class="@Constants.HtmlFormat.FORM_LABEL_CLASS">
                    @Html.LabelFor(model => model.RequestInfo.RequestedTime)
                </div>
                <div class="@Constants.HtmlFormat.FORM_CONTROL_CLASS">
                    @Html.DisplayFor(model => model.RequestInfo.RequestedTime, new { @class = Constants.HtmlFormat.FORM_INNER_CLASS })
                </div>
            </div>
            <div class="@Constants.HtmlFormat.FORM_ROW_CLASS">
                <div class="@Constants.HtmlFormat.FORM_LABEL_CLASS">
                    @Html.LabelFor(model => model.RequestInfo.Description)
                </div>
                <div class="@Constants.HtmlFormat.FORM_CONTROL_CLASS">
                    @Html.DisplayFor(model => model.RequestInfo.Description, new { @class = Constants.HtmlFormat.FORM_INNER_CLASS })
                </div>
            </div>
        </div>
        <hr />
        <div class="@Constants.HtmlFormat.FORM_ROW_CLASS">
            <div class="@Constants.HtmlFormat.FORM_LABEL_CLASS">
                @Html.LabelFor(model => model.SelectedRacks)
            </div>
            <div class="@Constants.HtmlFormat.FORM_CONTROL_CLASS">
                @foreach (var item in Model.SelectedRacks)
                {
                    @Html.DisplayFor(model => item, new { @class = Constants.HtmlFormat.FORM_INNER_CLASS })
                    <br />
                }
            </div>
        </div>
        <div class="@Constants.HtmlFormat.FORM_ROW_CLASS">
            <div class="@Constants.HtmlFormat.FORM_LABEL_CLASS">
            </div>
            <div class="@Constants.HtmlFormat.FORM_CONTROL_CLASS">
                @Html.HiddenFor(model => model.RequestInfo.RequestCode)
                @Html.HiddenFor(model => model.CustomerInfo.Customer)
                @Html.HiddenFor(x => x.RequestInfo.RequestType)
                @if ((Model.RequestInfo.StatusCode == Constants.StatusCode.REQUEST_PENDING ||
                Model.RequestInfo.StatusCode == Constants.StatusCode.REQUEST_PROCESSING) && User.IsInRole("Customer"))
                {
                    <button type="submit" id="btnCancel" name="@Constants.FormAction.CANCEL_ACTION" value="@Constants.FormAction.CANCEL_ACTION" class="@Constants.HtmlFormat.DANGER_BUTTON_CLASS">
                        @Labels.Cancel
                    </button>
                }
            </div>
        </div>
    }
</section>
