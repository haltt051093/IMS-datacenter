@model ProcessRequestRentRackViewModel
@{
    ViewBag.Title = Pages.ProcessRequestRentRack;
    ViewBag.PageTitle = Pages.ProcessRequestRentRack;
    ViewBag.Breadcrumbs = new List<BreadcrumbModel>
    {
        new BreadcrumbModel("Home", "Index", Pages.Home),
        new BreadcrumbModel("ProcessRequest", "Index", Pages.ProcessRequest),
        new BreadcrumbModel("ProcessRequest", "Detail", Pages.ProcessRequestRentRack)
    };
}
<section class="main-content">
    @using (Html.BeginForm("CancelRequestRentRack", "Request", FormMethod.Post))
            {
        <div class="@Constants.HtmlFormat.FORM_ROW_CLASS">
            <div class="col-xs-6">
                <div class="@Constants.HtmlFormat.FORM_ROW_CLASS">
                    <div class="@Constants.HtmlFormat.FORM_LABEL_X2_CLASS">
                        @Html.LabelFor(model => model.RequestInfo.RequestCode, "Request Code")
                        @Html.HiddenFor(model => model.SuccessMessage)
                    </div>
                    <div class="@Constants.HtmlFormat.FORM_DETAIL_X2_CLASS">
                        @Html.DisplayFor(model => model.RequestInfo.RequestCode, new { @class = Constants.HtmlFormat.FORM_INNER_CLASS })
                    </div>
                </div>
                <div class="@Constants.HtmlFormat.FORM_ROW_CLASS">
                    <div class="@Constants.HtmlFormat.FORM_LABEL_X2_CLASS">
                        @Html.LabelFor(model => model.RequestInfo.StatusName, "Status")
                    </div>
                    <div class="@Constants.HtmlFormat.FORM_DETAIL_X2_CLASS">
                        @Html.DisplayFor(model => model.RequestInfo.StatusName, new { @class = Constants.HtmlFormat.FORM_INNER_CLASS })
                    </div>
                </div>
                <div class="@Constants.HtmlFormat.FORM_ROW_CLASS">
                    <div class="@Constants.HtmlFormat.FORM_LABEL_X2_CLASS">
                        @Html.LabelFor(model => model.RequestInfo.RequestedTime, "Requested Time")
                    </div>
                    <div class="@Constants.HtmlFormat.FORM_DETAIL_X2_CLASS">
                        @Html.DisplayFor(model => model.RequestInfo.RequestedTime, new { @class = Constants.HtmlFormat.FORM_INNER_CLASS })
                    </div>
                </div>
                <div class="@Constants.HtmlFormat.FORM_ROW_CLASS">
                    <div class="@Constants.HtmlFormat.FORM_LABEL_X2_CLASS">
                        @Html.LabelFor(model => model.RequestInfo.Description)
                    </div>
                    <div class="@Constants.HtmlFormat.FORM_DETAIL_X2_CLASS">
                        @Html.DisplayFor(model => model.RequestInfo.Description, new { @class = Constants.HtmlFormat.FORM_INNER_CLASS })
                    </div>
                </div>
            </div>
            <div class="col-xs-6">
            </div>
        </div>
        <div class="@Constants.HtmlFormat.FORM_ROW_CLASS">
            <div class="@Constants.HtmlFormat.FORM_LABEL_CLASS">
                @Html.LabelFor(model => model.RackNumbers, "Number of Rack")
            </div>
            <div class="@Constants.HtmlFormat.FORM_CONTROL_CLASS">
                @Html.DisplayFor(model => model.RackNumbers, new { @class = Constants.HtmlFormat.FORM_INNER_CLASS })
            </div>
        </div>
        if (Model.RequestInfo.StatusCode == Constants.StatusCode.REQUEST_DONE)
        {
            <hr />
            <div class="@Constants.HtmlFormat.FORM_ROW_CLASS">
                <div class="@Constants.HtmlFormat.FORM_LABEL_CLASS">
                    @Html.LabelFor(model => model.RentedRacks, "Rented Rack")
                </div>
                <div class="@Constants.HtmlFormat.FORM_CONTROL_CLASS">
                    @foreach (var item in Model.RentedRacks)
                    {
                        @Html.DisplayFor(model => item, new { @class = Constants.HtmlFormat.FORM_INNER_CLASS })
                        <br />
                    }
                </div>
            </div>
        }
        if (Model.RequestInfo.Reason != null && Model.RequestInfo.StatusCode == Constants.StatusCode.REQUEST_REJECTED)
        {
            <hr />
            <div class="@Constants.HtmlFormat.FORM_ROW_CLASS">
                <div class="@Constants.HtmlFormat.FORM_LABEL_CLASS">
                    @Html.LabelFor(model => model.RequestInfo.Reason, "Rejeted Reason")
                </div>
                <div class="@Constants.HtmlFormat.FORM_CONTROL_CLASS">
                    @Html.DisplayFor(model => model.RequestInfo.Reason, new { @class = Constants.HtmlFormat.FORM_INNER_CLASS })
                </div>
            </div>
        }
                <div class="@Constants.HtmlFormat.FORM_ROW_CLASS">
                    <div class="@Constants.HtmlFormat.FORM_LABEL_CLASS">
                    </div>
                    <div class="@Constants.HtmlFormat.FORM_CONTROL_CLASS">
                        @Html.HiddenFor(model => model.RequestInfo.RequestCode)
                        @Html.HiddenFor(model => model.CustomerInfo.Customer)
                        @Html.HiddenFor(x => x.RequestInfo.RequestType)
                        @Html.HiddenFor(model => model.RequestInfo.TaskCode)
                        @if ((Model.RequestInfo.StatusCode == Constants.StatusCode.REQUEST_PENDING ||
                              Model.RequestInfo.StatusCode == Constants.StatusCode.REQUEST_PROCESSING) && User.IsInRole("Customer"))
                        {
                            <a class="btn btn-danger" data-toggle="modal" data-target="#Cancelrequest">Cancel</a>
                        }
                    </div>
                </div>
                              <!-- Cancel request modal -->
                <div id="Cancelrequest" class="@Constants.HtmlFormat.MODAL_CLASS" tabindex="-1" role="dialog" aria-hidden="true">
                    <div class="modal-dialog" style="width: 350px">
                        <div class="modal-content">


                            <div class="modal-body">
                                <h4>Are you sure to cancel this request?</h4>
                            </div>
                            <div class="modal-footer">
                                <button type="submit" id="btnCancel" name="@Constants.FormAction.CANCEL_ACTION" value="@Constants.FormAction.CANCEL_ACTION" class="@Constants.HtmlFormat.PRIMARY_BUTTON_CLASS">
                                    @Labels.OK
                                </button>
                                <button type="button" name="@Constants.FormAction.ACTION_NAME" value="@Constants.FormAction.CANCEL_ACTION" class="@Constants.HtmlFormat.DEFAULT_BUTTON_CLASS"
                                        data-dismiss="modal">
                                    @Labels.DialogCancel
                                </button>

                            </div>

                        </div><!-- /.modal-content -->
                    </div><!-- /.modal-dialog -->
                </div><!-- /.modal -->
    }
</section>
<script type="text/javascript">
    $('#masterTable').dataTable({
        dom: 't',
        ordering: false,
        searching: false
    });

    $("#checkAll").change(function () {
        var state = $('#checkAll').is(':checked');
        $('tr.check input[type="checkbox"]').prop('checked', state);
    });
    var message = $('#SuccessMessage').val();
    if (message) {
        notif({
            msg: "<b>Success! </b>" + message,
            type: "info",
            position: "center"
        });
        $('#SuccessMessage').val("");
    }
    $("#selectedRow").change(function () {
        var rowCode = $("#selectedRow").val();
        if (rowCode == null || rowCode == '') {
            $('#masterTable tbody tr').show();
        } else {
            $('#masterTable tbody tr').hide();
            $('#masterTable tbody tr[row-code="' + rowCode + '"]').show();
        }
    });
</script>