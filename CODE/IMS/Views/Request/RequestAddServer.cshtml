@using IMS.Data.Business
@model RequestAddServerViewModel

@{
    ViewBag.Title = "RequestAddServer";

}

<h2>Request Add Server</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Server</h4>
        <hr />
        //tai sao ko hien thi duoc
        <div>
            <h2>Add Attributes to Server</h2>
            <a href="#" id="addAtr">Add</a>
        </div>
        @*@for (int i = 0; i < Model.SelectedAttributes.Count; i++)
            {*@
        @*<div class="form-group" id="test">
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.SelectedAttributes[i], Model.AttributeList, new {@class = "form-control", style = "width:200px"})
                    @Html.TextBoxFor(model=>  model.AttributeValues[i])
                </div>
            </div>*@
        <div class="form-group" id="test"></div>
        <div class="form-group">
            @Html.LabelFor(model => model.Maker, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Maker, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Maker, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Modern, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Modern, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Modern, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Power, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Power, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Power, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Size, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Size, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Size, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Outlet, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Outlet, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Outlet, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Send Request" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<script src="~/scripts/jquery-1.10.2.js"></script>
<script src="~/scripts/jquery-ui-1.11.4.js"></script>
<script id="check" type="text/javascript">
    @{
        int count = 0;
        @Html.DropDownListFor(model => model.SelectedAttributes[count], Model.AttributeList, new {@class = "form-control", style = "width:200px", @id = "test1"})
        ;
        @Html.EditorFor(model => model.AttributeValues[count])
        count++;
    }
</script>
<script type="text/javascript">
    $(function () {
        $("#addAtr").click(function () {
            $('#test').append($('#check').html());
            $('#test select').each(function(i, e) {
                $(e).attr('name', 'SelectedAttributes[' + i + ']');
                $(e).attr('id', 'SelectedAttributes_' + i + '_');
            });
            $('#test input').each(function(i, e) {
                $(e).attr('name', 'AttributeValues[' + i + ']');
                $(e).attr('id', 'AttributeValues_' + i + '_');
            });
            return false;
        });
    });
</script>


@*<script type="text/javascript">
    @*var initial = 0;
    @{
        int count = initial;
            @Html.DropDownListFor(model => model.SelectedAttributes[count], Model.AttributeList, new {@class = "form-control", style = "width:200px"});
            @Html.EditorFor(model=>model.AttributeValues[count])
        initial = initial + 1;
    }*@

@*$(function () {
            //var newContent = '<div class="added">Added</div>';
            $("#addAtr").click(function () {
                var array = @(Html.DropDownListFor(model => model.SelectedAttributes[0], Model.AttributeList, new {@class = "form-control", style = "width:200px"}));
                $('#test').append($(array).html());
            });
        });
    </script>*@
