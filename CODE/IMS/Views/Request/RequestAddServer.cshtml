@using System.Collections.Generic
@model RequestAddServerViewModel

@{
    ViewBag.Role = "Request Add Server";
}
<script>
    $(document).ready(function () {
        $("#formAssign").hide();
        $("#isAssign").click(function () {
            $("#formAssign").show();
        });
    });
</script>
<section class="content-header">
    <h1>
        Request Add Server
    </h1>
    <ol class="breadcrumb">
        <li><a href="@Url.Action("RequestHistory2", "Request")"><i class="fa fa-dashboard"></i> Home</a></li>
        <li class="active">Request Add Server</li>
    </ol>
</section>
@using (Html.BeginForm("RequestAddServer", "Request", FormMethod.Post))
{
    <section class="content">
        <div class="box">
            <div class="box-body table-responsive">
                <div class="form-horizontal">
                    <div class="form-group">
                        <label for="" class="col-sm-4 control-label">Appointment Time</label>
                        <div class="container">
                            <div class="row">
                                <div class='col-sm-6'>
                                    <div class="form-group">
                                        <div class='input-group date' id='datetimepicker1'>
                                            @Html.EditorFor(model => model.AppointmentTime, new { htmlAttributes = new { @class = "form-control", placeholder = "Date to go to center" } })
                                            <span class="input-group-addon">
                                                <span class="glyphicon glyphicon-calendar"></span>
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                @*@{
                        if (Request.Url.ToString().Contains("act=Update"))
                        {
                            <div class="form-group">
                                <label for="" class="col-sm-4 control-label">Assign Name</label>
                                <div class="form-group col-sm-4">
                                    @Html.EditorFor(model => model.AssignedName, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                            </div>
                            <div class="form-group">
                                <label for="" class="col-sm-4 control-label">Identification</label>
                                <div class="form-group col-sm-4">
                                    @Html.EditorFor(model => model.Identification, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="form-group">
                                <button class="col-sm-2 col-xs-offset-4 btn btn-default" id="isAssign">
                                    <label>Assign Different Person?</label>
                                </button>
                            </div>
                        }
                    }*@
                @*<div id="formAssign">
                        <div class="form-group">
                            <label for="" class="col-sm-4 control-label">Assign Name</label>
                            <div class="form-group col-sm-4">
                                @Html.EditorFor(model => model.AssignedName, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>
                        <div class="form-group" id="formAssign">
                            <label for="" class="col-sm-4 control-label">Identification</label>
                            <div class="form-group col-sm-4">
                                @Html.EditorFor(model => model.Identification, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>
                    </div>
                    <br />*@
                <div class="form-group">
                    <button class="col-sm-2 col-xs-offset-4 btn btn-default" data-toggle="modal" data-target="#addserver-modal">
                        <label>Add Server Information</label>
                    </button>
                </div>
                <div class="form-group" style="width: 1000px">
                    <table id="" class="table table-bordered table-striped  col-xs-offset-1">
                        <thead>
                            <tr>
                                <th>No</th>
                                <th>Maker</th>
                                <th>Power</th>
                                <th>Model</th>
                                <th>Size</th>
                                <th>Bandwidth</th>
                                <th>Serial Number</th>
                                <th>Part Number</th>
                                <th>Memory</th>
                                <th></th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            
                        @for (int i = 0; i < Model.Servers.Count; i++)
                        {
                            <tr>
                                <td>
                                    i
                                </td>
                                <td>
                                    @Html.DisplayFor(model => Model.Servers[i].Maker, new {htmlAttributes = new {@class = "form-control"}})
                                    @Html.HiddenFor(modelItem => modelItem.Servers[i].Maker)
                                </td>
                                <td>
                                    @Html.DisplayFor(model => Model.Servers[i].Power, new {htmlAttributes = new {@class = "form-control"}})W
                                    @Html.HiddenFor(modelItem => modelItem.Servers[i].Power)
                                </td>
                                <td>
                                    @Html.DisplayFor(model => Model.Servers[i].Model, new {htmlAttributes = new {@class = "form-control"}})
                                    @Html.HiddenFor(modelItem => modelItem.Servers[i].Model)
                                </td>
                                <td>
                                    @Html.DisplayFor(model => Model.Servers[i].Size, new {htmlAttributes = new {@class = "form-control"}})U
                                    @Html.HiddenFor(modelItem => modelItem.Servers[i].Size)
                                </td>
                                <td>
                                    @Html.DisplayFor(model => Model.Servers[i].Bandwidth, new {htmlAttributes = new {@class = "form-control"}})
                                    @Html.HiddenFor(modelItem => modelItem.Servers[i].Bandwidth)
                                </td>
                                <td>
                                    @Html.DisplayFor(model => Model.Servers[i].SerialNumber, new {htmlAttributes = new {@class = "form-control"}})
                                    @Html.HiddenFor(modelItem => modelItem.Servers[i].SerialNumber)
                                </td>
                                <td>
                                    @Html.DisplayFor(model => Model.Servers[i].PartNumber, new {htmlAttributes = new {@class = "form-control"}})
                                    @Html.HiddenFor(modelItem => modelItem.Servers[i].PartNumber)
                                </td>
                                <td>
                                    @Html.DisplayFor(model => Model.Servers[i].Memory, new {htmlAttributes = new {@class = "form-control"}})
                                    @Html.HiddenFor(modelItem => modelItem.Servers[i].Memory)
                                </td>
                                <td>
                                    <a href="" data-toggle="modal" data-target="#editserver-modal">Edit</a>
                                </td>
                                <td>
                                    @Html.ActionLink("Delete", "DeleteTempServer", "Request", new {tempCode = Model.Servers[i].TempCode}, null)
                                </td>
                            </tr>
                        }
                        </tbody>
                    </table>
                </div>
                <div class="form-group">
                    <label for="" class="col-sm-4 control-label">Note</label>
                    <div class="form-group col-sm-4">
                        @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
                <div class="form-group">
                    <div style="display: none;">
                        @Html.EditorFor(model => model.Servers)
                    </div>
                    <button type="submit" class="btn btn-primary col-xs-offset-4">Send</button>
                </div>
            </div>
        </div><!-- /.box-body -->
    </section>
}
<!-- ADD SERVER MODAL -->
<div class="modal fade" id="addserver-modal" tabindex="-1" role="dialog">
    <div class="modal-dialog" style="width: 500px">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title"><i class="fa fa-edit"></i> Add Server</h4>
            </div>
            @using (Html.BeginForm("SaveTempData", "Request", FormMethod.Post))
            {
                <div class="modal-body form-horizontal">
                    <div class="form-group">
                        <label class="col-sm-3 control-label">Maker</label>
                        <div class="col-sm-9">
                            @Html.EditorFor(model => model.Server.Maker, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-3 control-label">Power</label>
                        <div class="col-sm-9">
                            @Html.EditorFor(model => model.Server.Power, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-3 control-label">Model</label>
                        <div class="col-sm-9">
                            @Html.EditorFor(model => model.Server.Model, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-3 control-label">Size</label>
                        <div class="col-sm-3">
                            @{
                                List<SelectListItem> myList = new List<SelectListItem>();
                                int[] list = new int[] { 1, 2, 4 };
                                foreach (var i in list)
                                {
                                    string num = (i).ToString();
                                    SelectListItem item = new SelectListItem()
                                    {
                                        Value = num,
                                        Text = num
                                    };
                                    myList.Add(item);
                                }
                            }
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.Server.Size, myList, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-3 control-label">Bandwidth</label>
                        <div class="col-sm-9">
                            <div class="col-md-10">
                                @Html.RadioButtonFor(model => model.Server.Bandwidth, "100Mbps", new { htmlAttributes = new { @class = "form-control" } }) 100Mbps
                                @Html.RadioButtonFor(model => model.Server.Bandwidth, "1Gbps", new { htmlAttributes = new { @class = "form-control" } }) 1Gbps
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-3 control-label">Serial number</label>
                        <div class="col-sm-9">
                            @Html.EditorFor(model => model.Server.SerialNumber, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-3 control-label">Part number</label>
                        <div class="col-sm-9">
                            @Html.EditorFor(model => model.Server.PartNumber, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-3 control-label">Memory</label>
                        <div class="col-sm-9">
                            @Html.EditorFor(model => model.Server.Memory, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                </div>
                <div class="modal-footer clearfix">
                    <button type="submit" class="btn btn-primary"><i class="fa fa-plus"> Add</i></button>
                    <button type="button" class="btn btn-danger" data-dismiss="modal"><i class="fa fa-times"></i> Cancel</button>
                </div>
                                }
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

<script type="text/javascript">
    $(function () {
        $('#datetimepicker1').datetimepicker(
       {
           "disabledHours": [0, 1, 2, 3, 4, 5, 6, 7, 21, 22, 23, 24],
           "enabledHours": [8, 9, 10, 12, 12, 14, 15, 16, 17, 18, 19, 20],
           "stepping": '30',
           "minDate": 'moment'
       });
    });
</script>
