@model RequestChangeIPViewModel
@{
    ViewBag.Title = Pages.RequestChangeIP;
    ViewBag.PageTitle = Pages.RequestChangeIP;
    ViewBag.Breadcrumbs = new List<BreadcrumbModel>
    {
        new BreadcrumbModel("Home", "Index", Pages.Home),
        new BreadcrumbModel("Request", "Index", Pages.Request),
        new BreadcrumbModel("Request", "Create", Pages.RequestCreate),
        new BreadcrumbModel("Request", "Create", Pages.RequestChangeIP, new { Type = Constants.RequestTypeCode.CHANGE_IP })
    };
}
<section class="main-content">
    @using (Html.BeginForm("ChangeIp", "Request", FormMethod.Post))
    {
        <div class="@Constants.HtmlFormat.FORM_ROW_CLASS">
            <div class="@Constants.HtmlFormat.FORM_LABEL_CLASS">
                @Html.LabelFor(model => model.SelectedServer, new { @class = "required" })
            </div>
            <div class="@Constants.HtmlFormat.FORM_CONTROL_CLASS">
                @Html.DropDownListFor(m => m.SelectedServer, Model.ServerOptions, "Select your server", new {@class = Constants.HtmlFormat.FORM_INNER_CLASS})
                @Html.ValidationMessageFor(model => model.SelectedServer)
            </div>
        </div>
        <div class="@Constants.HtmlFormat.FORM_ROW_CLASS">
            <div class="@Constants.HtmlFormat.FORM_LABEL_CLASS">
            </div>
            <div class="@Constants.HtmlFormat.FORM_CONTROL_CLASS">
                @Html.HiddenFor(model => model.ServerValidation)
                @Html.ValidationMessageFor(model => model.ServerValidation)
            </div>
        </div>
        <div id="divPartialView" class="hidden">
            <div class="@Constants.HtmlFormat.FORM_ROW_CLASS">
                <div class="@Constants.HtmlFormat.FORM_LABEL_CLASS">
                    @Html.LabelFor(model => model.ReturningIPs)
                </div>
                <div class="@Constants.HtmlFormat.FORM_CONTROL_CLASS">
                    <table id="MyTable" class="@Constants.HtmlFormat.DATATABLE_CLASS">
                        <thead>
                        <tr class="@Constants.HtmlFormat.DATATABLE_HEADER_CLASS">
                            <th>
                                <div>
                                    <input id="checkAll" type="checkbox"/>
                                </div>
                            </th>
                            <th>
                                <div>@Labels.IP</div>
                            </th>
                        </tr>
                        </thead>
                        <tbody id="tbodyid"></tbody>
                    </table>
                    @Html.HiddenFor(model => model.ReturningIPs, new { id = "ips" })
                    @Html.ValidationMessageFor(model => model.ReturningIPs)
                </div>
            </div>
        </div>
        <div class="@Constants.HtmlFormat.FORM_ROW_CLASS">
            <div class="@Constants.HtmlFormat.FORM_LABEL_CLASS">
                @Html.LabelFor(model => model.RequestInfo.Description)
            </div>
            <div class="@Constants.HtmlFormat.FORM_CONTROL_CLASS">
                @Html.TextAreaFor(model => model.RequestInfo.Description, new {@class = Constants.HtmlFormat.FORM_INNER_CLASS})
                @Html.ValidationMessageFor(model => model.RequestInfo.Description)
            </div>
        </div>
        <div class="@Constants.HtmlFormat.FORM_ROW_CLASS">
            <div class="@Constants.HtmlFormat.FORM_LABEL_CLASS">
            </div>
            <div class="@Constants.HtmlFormat.FORM_CONTROL_CLASS">
                @Html.HiddenFor(x => x.rCode)
                <button type="submit" id="btnAccept" name="@Constants.FormAction.ACTION_NAME" value="@Constants.FormAction.OK_ACTION" class="@Constants.HtmlFormat.PRIMARY_BUTTON_CLASS">
                    Send Request
                </button>
            </div>
        </div>
    }
</section>
<script>
    // add jquery validation method
    $.validator.addMethod('customrequired', function (value, element, params) {
        var count = $('#SelectedServer').val();
        if (count == 0) {
            return false;
        } else {
            return true;
        }
    });
    // add jquery validation method
    $.validator.addMethod('customrequired1', function (value, element, params) {
        var count = $('[id*=MyTable] input[type="checkbox"]:checked').length;
        if (count == 0) {
            return false;
        } else {
            return true;
        }
    });

    //function mouseclick(e) {
    //    var rows = $('#MyTable tbody tr');
    //    var row = $(this);
    //    var index = rows.index(row);

    //    row = $(rows.get(index));
    //    row.find('input[type="checkbox"]').prop('checked', true);
    //    //selectedChkCount += 1;
    //}
</script>

<script type="text/javascript">
   
    $('#SelectedServer').change(function () {
        var pass = $('#SelectedServer').val();
        var myTable = $('#MyTable > tbody');
        $('#tbodyid').empty();
        $.ajax({
            cache: false,
            type: "GET",
            url: "@(Url.Action("FetchChangedIPs", "Request"))",
            data: { "SelectedServer": pass },
            dataType: "json",
            success: function (data) {
                $('#divPartialView').removeClass('hidden');
                if (data.ServerIPs.length == 0) {
                    myTable.append('<tr><td colspan="2" style="text-align:center">No data available in table</td></tr>');
                } else {
                    $(data.ServerIPs).each(function (index, item) {
                        myTable.append('<tr><td>' + '<input type="checkbox" class="chknull" id="CheckBoxList"' + index + ' name="chk" value="' + item.CurrentIP + '" /></td><td>' + item.CurrentIP + '</td></tr>');
                        if (item.IsDefault) {
                            $("tr:last").css({ backgroundColor: "yellow", fontWeight: "bolder" }).attr('id', 'hohoho');
                        }
                    });
                }
                
            }
        });
    });
    //Get value of selected items
    $("#btnAccept").click(function () {
        var selectedValues = [];
        $("[id*=MyTable] input:checked").each(function () {
            selectedValues.push($(this).val());
        });
        $('#ips').val(selectedValues);
    });

    $("#checkAll").change(function () {
        var state = $('#checkAll').is(':checked');
        $('[id*=MyTable] input[type="checkbox"]').prop('checked', state);
    });

    var selectedChkCount = 0;
    $('#tbodyid').on('click', '.chknull', function () {
        var selectedChk = $('.chknull:checked');
        selectedChkCount = selectedChk.length;
    });

    
</script>

