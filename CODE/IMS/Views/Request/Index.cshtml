@model RequestIndexViewModel
@{
    ViewBag.Title = Pages.RequestIndex;
    ViewBag.PageTitle = Pages.RequestIndex;
    ViewBag.Breadcrumbs = new List<BreadcrumbModel>
    {
        new BreadcrumbModel("Home", "Index", Pages.Home),
        new BreadcrumbModel("Request", "Index", Pages.Request)
    };
}
<!-- Main content -->
<section class="main-content">
    <div class="row">
        <div class="col-xs-4">
            Request Type:
        </div>
        <div class="col-xs-8">
            @Html.DropDownListFor(m => m.FilterByRequestType, Model.FilterByRequestType, "Select All")
        </div>
    </div>
    <div class="row">
        <div class="col-xs-4">
            Request Status:
        </div>
        <div class="col-xs-8">
            @Html.DropDownListFor(m => m.FilterByStatus, Model.FilterByStatus, "Select All")
        </div>
    </div>
    <div class="row">
        <div class="col-xs-4">
            Time of Request:
        </div>
        <div class="col-xs-8">
            @Html.DropDownListFor(m => m.FilterByPeriodOfTime, Model.FilterByPeriodOfTime)
        </div>
    </div>
    <table id="example1" class="table table-bordered table-striped">
        <thead>
            <tr>
                <th>
                    Request Code
                </th>
                <th>
                    Request Type
                </th>
                <th>
                    Requested Time
                </th>
                <th>
                    Status
                </th>
            </tr>
        </thead>

        @for (int i = 0; i < Model.Requests.Count; i++)
        {
            <tbody class="clickmee check" status-code="@Model.Requests[i].LastestStatusRequest.StatusCode" type-code="@Model.Requests[i].LastestStatusRequest.RequestTypeCode" duration="@Model.Requests[i].LastestStatusRequest.DaysFromNow">
                <tr>
                    <td>
                        @Html.ActionLink(Model.Requests[i].LastestStatusRequest.RequestCode, "Detais", "Request",
                        new { rType = Model.Requests[i].LastestStatusRequest.RequestTypeCode, rCode = Model.Requests[i].LastestStatusRequest.RequestCode }, null)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => Model.Requests[i].LastestStatusRequest.RequestTypeName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => Model.Requests[i].LastestStatusRequest.LogTime)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => Model.Requests[i].LastestStatusRequest.StatusName)
                    </td>
                </tr>
            </tbody>
            <tbody class="showhide" style="display: none; background-color: lightgrey;">
                @if (Model.Requests[i].OldStatusRequests != null)
                {
                    foreach (var old in Model.Requests[i].OldStatusRequests)
                    {
                        <tr style="background-color: lightgrey;">
                            <td>
                                @Html.DisplayFor(modelItem => old.RequestCode)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => old.RequestTypeName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => old.LogTime)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => old.StatusName)
                            </td>
                        </tr>
                    }
                }
            </tbody>
        }
        <tfoot>
            <tr>
                <th>
                    @Html.Raw("RequestCode")
                </th>
                <th>
                    @Html.Raw("RequestType")
                </th>
                <th>
                    @Html.Raw("RequestedTime")
                </th>
                <th>
                    @Html.Raw("Status")
                </th>
            </tr>
        </tfoot>
    </table>
</section><!-- /.content -->

<script>
    function filterRequest() {
        var typeCode = $("#FilterByRequestType").val();
        var statusCode = $("#FilterByStatus").val();
        var duration = $('#FilterByPeriodOfTime').val();
        if (typeCode == null) {
            typeCode = '';
        }
        if (statusCode == null) {
            statusCode = '';
        }
        if (duration == null || isNaN(duration)) {
            duration = 99999;
        }
        duration = duration - 0;

        //if (typeCode == '' && statusCode == '') {
        //    $('#example1 tbody[type-code][status-code]').show();
        //}
        //else {
        //$('#example1 tbody').hide();
        //if (typeCode != '' && statusCode == '') {
        //    $('#example1 tbody[type-code="' + typeCode + '"]').show();
        //} else if (statusCode != '' && typeCode == '') {
        //    $('#example1 tbody[status-code="' + statusCode + '"]').show();
        //} else {
        //    $('#example1 tbody[type-code="' + typeCode + '"][status-code="' + statusCode + '"]').show();
        //}
        //}
        $('#example1 tbody[type-code][status-code]').each(function (i, e) {
            var row = $(e);
            var rowTypeCode = row.attr('type-code');
            var rowStatusCode = row.attr('status-code');
            var rowDuration = row.attr('duration');
            var isShow = false;
            if (typeCode == '' && statusCode == '' && duration >= rowDuration) {
                isShow = true;
            } else if (typeCode != '' && statusCode == '') {
                if (rowTypeCode == typeCode && duration >= rowDuration) {
                    isShow = true;
                }
            } else if (typeCode == '' && statusCode != '') {
                if (rowStatusCode == statusCode && duration >= rowDuration) {
                    isShow = true;
                }
            } else {
                if (rowTypeCode == typeCode && rowStatusCode == statusCode && duration >= rowDuration) {
                    isShow = true;
                }
            }
            if (isShow) {
                row.show();
            } else {
                row.hide();
            }
        });
    }
</script>

<script type="text/javascript">
    $(".clickmee").click(function () {
        $(this).closest('tbody')
            .next('.showhide')
            .toggle('fast');
    });

    $("#example1").dataTable({
        "iDisplayLength": -1,
        "aaSorting": [[2, "desc"]] // Sort by first column descending
    });

    $("#FilterByRequestType").change(function () {
        filterRequest();

    });

    $("#FilterByStatus").change(function () {
        filterRequest();
    });

    $("#FilterByPeriodOfTime").change(function () {
        filterRequest();
    });

    filterRequest();
</script>