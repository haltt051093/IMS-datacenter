@model ProcessRequestReturnIPViewModel
@{
    ViewBag.Title = "RequestReturnIPInfo";
}

<section class="content-header">
    <h1>
        Detail Request Return IP Address
    </h1>
    <ol class="breadcrumb">
        <li><a href="@Url.Action("Index", "Schedule")"><i class="fa fa-dashboard"></i> Home</a></li>
        <li class="active">Detail Request Return IP Address</li>
    </ol>
</section>
<section class="main-content">
    @using (Html.BeginForm("CancelRequestReturnIp", "Request", FormMethod.Post))
    {
        <div class="@Constants.HtmlFormat.FORM_ROW_CLASS">
            <div class="@Constants.HtmlFormat.FORM_ROW_CLASS">
                <div class="@Constants.HtmlFormat.FORM_LABEL_CLASS">
                    @Html.LabelFor(model => model.RequestInfo.RequestCode)
                </div>
                <div class="@Constants.HtmlFormat.FORM_CONTROL_CLASS">
                    @Html.DisplayFor(model => model.RequestInfo.RequestCode, new {@class = Constants.HtmlFormat.FORM_INNER_CLASS})
                </div>
            </div>
            <div class="@Constants.HtmlFormat.FORM_ROW_CLASS">
                <div class="@Constants.HtmlFormat.FORM_LABEL_CLASS">
                    @Html.LabelFor(model => model.RequestInfo.StatusName)
                </div>
                <div class="@Constants.HtmlFormat.FORM_CONTROL_CLASS">
                    @Html.DisplayFor(model => model.RequestInfo.StatusName, new {@class = Constants.HtmlFormat.FORM_INNER_CLASS})
                </div>
            </div>
            <div class="@Constants.HtmlFormat.FORM_ROW_CLASS">
                <div class="@Constants.HtmlFormat.FORM_LABEL_CLASS">
                    @Html.LabelFor(model => model.RequestInfo.RequestedTime)
                </div>
                <div class="@Constants.HtmlFormat.FORM_CONTROL_CLASS">
                    @Html.DisplayFor(model => model.RequestInfo.RequestedTime, new {@class = Constants.HtmlFormat.FORM_INNER_CLASS})
                </div>
            </div>
            <div class="@Constants.HtmlFormat.FORM_ROW_CLASS">
                <div class="@Constants.HtmlFormat.FORM_LABEL_CLASS">
                    @Html.LabelFor(model => model.RequestInfo.Description)
                </div>
                <div class="@Constants.HtmlFormat.FORM_CONTROL_CLASS">
                    @Html.DisplayFor(model => model.RequestInfo.Description, new {@class = Constants.HtmlFormat.FORM_INNER_CLASS})
                </div>
            </div>
        </div>
        <hr />
        <div class="@Constants.HtmlFormat.FORM_ROW_CLASS">
            <div class="@Constants.HtmlFormat.FORM_LABEL_CLASS">
                @Html.LabelFor(model => model.SelectedServer)
            </div>
            <div class="@Constants.HtmlFormat.FORM_CONTROL_CLASS">
                @Html.DisplayFor(model => model.SelectedServer, new { @class = Constants.HtmlFormat.FORM_INNER_CLASS })
            </div>
        </div>
        <div class="@Constants.HtmlFormat.FORM_ROW_CLASS">
            <div class="@Constants.HtmlFormat.FORM_LABEL_CLASS">
                @Html.LabelFor(model => model.RequestInfo.Description)
            </div>
            <div class="@Constants.HtmlFormat.FORM_CONTROL_CLASS">
                @Html.DisplayFor(model => model.RequestInfo.Description, new { @class = Constants.HtmlFormat.FORM_INNER_CLASS })
            </div>
        </div>
        <div class="@Constants.HtmlFormat.FORM_ROW_CLASS">
            <div class="@Constants.HtmlFormat.FORM_LABEL_CLASS">
                @Html.LabelFor(model => model.ReturningIPs)
            </div>
            <div class="@Constants.HtmlFormat.FORM_CONTROL_CLASS">
                @for (int i = 0; i < Model.ReturningIPs.Count; i++)
                {
                    @Html.DisplayFor(model => Model.ReturningIPs[i], new { @class = Constants.HtmlFormat.FORM_INNER_CLASS })
                    @Html.HiddenFor(model => Model.ReturningIPs[i])
                    <br />
                }
            </div>
        </div>
        <div class="@Constants.HtmlFormat.FORM_ROW_CLASS">
            <div class="@Constants.HtmlFormat.FORM_LABEL_CLASS">
            </div>
            <div class="@Constants.HtmlFormat.FORM_CONTROL_CLASS">
                @Html.HiddenFor(model => model.RequestInfo.RequestCode, new { @id = "requestCode" })
                @Html.HiddenFor(model => model.CustomerInfo.Customer)
                @Html.HiddenFor(x => x.RequestInfo.RequestType)
                @Html.HiddenFor(model => model.RequestInfo.TaskCode, new { @id = "taskCode" })
                @if ((Model.RequestInfo.StatusCode == Constants.StatusCode.REQUEST_PENDING ||
                      Model.RequestInfo.StatusCode == Constants.StatusCode.REQUEST_PROCESSING) && User.IsInRole("Customer"))
                {
                    <button type="submit" id="btnCancel" name="@Constants.FormAction.CANCEL_ACTION" value="@Constants.FormAction.CANCEL_ACTION" class="@Constants.HtmlFormat.DANGER_BUTTON_CLASS">
                        @Labels.Cancel
                    </button>
                }
            </div>
        </div>
    }
</section>
<script type="text/javascript">

    $('#btnCancel').click(function () {
        @*var requestCode = $('#requestCode').val();
        var taskCode = $('#taskCode').val();
        alertify.confirm('Are you sure to cancel this request?', function () {
            get('@Url.Action("CancelRequestReturnIp", "Request", new {httproute = ""})' + '/' + requestCode + '/' + taskCode, function (data) {
                //$('#' + tempCode).remove();
            });
        }, function () {

        });
        return false;*@
    });
</script>
