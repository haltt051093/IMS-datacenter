@model NotificationViewModel
@{
    ViewBag.Title = Pages.Notification;
    ViewBag.PageTitle = Pages.Notification;
    ViewBag.Breadcrumbs = new List<BreadcrumbModel>
    {
        new BreadcrumbModel("Home", "Index", Pages.Home),
        new BreadcrumbModel("Notification", "Index", Pages.Notification)
    };
}
<!-- Main content -->
<section class="main-content">
    @using (Html.BeginForm("Detail", "Notification", FormMethod.Post, new { @id = "addserverform" }))
    {
        <table id="example1" class="@Constants.HtmlFormat.DATATABLE_CLASS_HOVER">
            <thead>
                <tr style="background-color: #404040">
                    <th><span style="color: ghostwhite">Notification</span>
                    <th><span style="color: ghostwhite">Time</span>
                    <th></th>
                </tr>
            </thead>
            <tbody id="tableBody">
                @foreach (var item in Model.NotificationList)
                {
                    <tr class="clickable btnRequestCode" notif-code="@item.NotificationCode"
                        view-code="@item.IsViewed">
                        <td>
                            @Html.DisplayFor(modelItem => item.Description)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.NotifTime)
                        </td>
                        <td>
                            @Html.Raw(item.IsViewed)
                        </td>
                    </tr>
                }
            </tbody>
            <tfoot>
                <tr style="background-color: #404040">
                    <th><span style="color: ghostwhite">Notification</span></th>
                    <th><span style="color: ghostwhite">Time</span></th>
                    <th></th>
                </tr>
            </tfoot>
        </table>
    }
</section><!-- /.content -->
<script type="text/javascript">
    $(function () {
        $("#example1").DataTable({
            //"iDisplayLength": -1,
            "aaSorting": [[1, "desc"]], // Sort by first column descending
            "fnRowCallback": function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {
                if (aData[2] == "False") {
                    $('td', nRow).addClass('background-warning');
                };
            },
            columnDefs: [{
                targets: [2],
                visible: false,
                searchable: false
            }]

        });
        function decorateRow(row) {
            $(row).children().each(function (index, td) {
                if ($(td).html().indexOf("-") === 0) {
                    $(td).css("color", "red");
                }
                else {
                    $(td).css("color", "blue");
                }
            });
        }
        $('#example1').on('click', '.btnRequestCode', function () {
            var notif = $(this).attr('notif-code');
            window.location.assign('@Url.Action("Detail", "Notification")' + '/' + notif);
        });
    });
</script>
