@model RackOfCustomerIndexViewModel
@{
    ViewBag.Title = Pages.RackIndex;
    ViewBag.PageTitle = Pages.RackIndex;
    ViewBag.Breadcrumbs = new List<BreadcrumbModel>
    {
        new BreadcrumbModel("Home", "Index", Pages.Home),
        new BreadcrumbModel("Location", "Index2", Pages.RackIndex)
    };
}


<section class="main-content">
    <div class="row hide">
        <div id="dropdown-template" class="col-xs-3">
            <label>Location: @Html.DropDownListFor(model => model.RackCode, Model.RackSelectList, "All Racks", new { @class = "form-control input-sm", style = "width: 150px" }) </label>
        </div>
    </div>

    <table id="example1" class="table table-bordered table-hover">
        <thead>
            <tr class="@Constants.HtmlFormat.DATATABLE_HEADER_CLASS">
                <th>Rack Code</th>
                <th>Rack Name</th>
                <th>Rack Unit</th>
                <th>Rack Status</th>
                <th>IP Address</th>
            </tr>
        </thead>
        <tfoot>
            <tr class="@Constants.HtmlFormat.DATATABLE_HEADER_CLASS">
                <th>Rack Code</th>
                <th>Rack Name</th>
                <th>Rack Unit</th>
                <th>Rack Status</th>
                <th>IP Address</th>
            </tr>
        </tfoot>
    </table>


</section><!-- /.content -->

<script>
    $.fn.dataTable.ext.search.push(
        function (settings, data, dataIndex) {
            var rackCode = $('#RackCode').val();
            if (rackCode == '') {
                return true;
            }
            if (rackCode == data[0]) {
                return true;
            }
            return false;
        }
    );
</script>

<script type="text/javascript">
    var table = $('#example1').DataTable({
        dom: '<lf<t>ip>',
        processing: true,
        ajax: "@Url.Action("GetRackOfCustomer", "Rack", new { httproute = "", customer = Model.CustomerCode })",
        columns: [
            { data: "RackCode" },
            { data: "RackName" },
            { data: "RackUnit" },
            { data: "RackStatus" },
            { data: "DefaultIP" }
            
        ],
        iDisplayLength: 42,
        aLengthMenu: [[42, 84, 126], [42, 84, 126]],
        fnRowCallback: function(nRow, aData, iDisplayIndex, iDisplayIndexFull) {
            $(nRow).click(function() {
                if (aData.ServerCode != null) {
                    var url = CONSTANT.authority + '@Url.Action("Detail", "Server")' + '/' + aData.ServerCode;
                    window.location.assign(url);
                }
            });
            switch (aData.StatusName) {
            case 'Used':
                $(nRow).css('background-color', '#ffe6e6');
                break;
            }
        },
        order: [[1, "asc"] ,[ 2, "desc" ]],
        columnDefs: [
            {
                targets: [0],
                visible: false,
                searchable: true
            }
        ]
    });

    $("#example1_filter").append($('#dropdown-template').html());
    $('#dropdown-template').html('');

    $('#RackCode').change(function() {
        table.draw();
    });

</script>

@section Styles {
    <style>
    </style>
}