@using IMS.Data.Models
@model IMS.Models.ScheduleIndexViewModel
@{
    ViewBag.Title = "SchedulePage";
    ViewBag.Role = "Shift Head";
}
<!-- fullCalendar -->
<link href="@Url.Content("~/Content/fullcalendar/fullcalendar.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/Content/fullcalendar.print.css")" rel="stylesheet" type="text/css" media='print' />
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.0/jquery.min.js"></script>
<script>

    $(document).ready(function() {
        $("#addnote").click(function() {
            $("#paneladdnote").slideToggle("slow");
        });
    });
</script>

<script>

        $(document).ready(function(){
            $("#addnotedetail").click(function(){
                $("#paneladdnotedetail").slideToggle("slow");
            });
        });
</script>
<section class="content-header">
    <h1>
        Schedule
    </h1>
    <ol class="breadcrumb">
        <li><a href="@Url.Action("Index2", "Schedule")"><i class="fa fa-dashboard"></i> Home</a></li>
    </ol>
</section>

<!-- Main content -->
<section class="content">


    <div class="row">
        <div class="col-md-4">
            
            <div class="box box-primary">
                <div class="box-header" id="addnote">
                    <h3 class="box-title fa fa-plus"> Add note for Next Shift</h3>
                </div>
                <form method="POST">
                    <div class="box-body" id="paneladdnote" style="display: none;">
                        <div class="panel panel-default">
                            <div class="panel-body">
                                <input type="hidden" name="StaffCode" value="haltt"/>

                                @{
                                    if (Model.Schedules.Count > 0)
                                    {
                                        
                                   
                                    for (int i = 0; i < Model.Schedules.Count; i++)
                                    {
                                        var item = Model.Schedules[i];
                                        <div class="panel panel-default">
                                            <div class="panel-heading" id="">
                                                @Html.ActionLink(item.RequestTypeName+"--"+item.StatusName, "Detail","ProcessRequest",new {code = item.RequestCode},null)
                                                

                                            </div>
                                            <div class="panel-body" id="">
                                                @if (!String.IsNullOrEmpty(item.NoteContent))
                                                {                                                 
                                                        <div class="form-inline">
                                                            <div class="form-group">
                                                                <label>PreNote:</label>
                                                            </div>
                                                            <div class="form-group">
                                                                <label>@item.NoteContent</label>
                                                            </div>
                                                        </div>
                                                    
                                                }

                                                <div class="form-inline">
                                                    <div class="form-group">
                                                        <label>Note:</label>
                                                    </div>
                                                    <div class="form-group">
                                                        @Html.HiddenFor(model => Model.Schedules[i].RequestCode)
                                                        @Html.TextAreaFor(content => Model.NewNote[i],htmlAttributes:new {style="width: 200px"})
                                                        @Html.ValidationMessageFor(model => Model.NewNote[i], "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>

                                        </div>

                                        }
                                        <div class="form-group">
                                            <button type="submit" class="btn btn-primary pull-right"><i class="fa fa-check"></i> Send</button>

                                        </div>
                                    }

                                }
                                
                            </div>

                        </div>
                    </div>
                </form>
            </div><!-- /. box -->
        @if (Model.Schedules1.Count > 0)
        {
            <div class="box box-primary">
                <div class="box-header">
                    <h4 class="box-title">Note of Previous Shift</h4>
                </div>
                <div class="box-body">
                    @foreach (var item in Model.Schedules1)
                    {
                        <div class="panel panel-default">
                            <div class="panel-heading" id="">
                                @Html.ActionLink(item.RequestTypeName + "--" + item.StatusName, "Detail", "ProcessRequest", new { code = item.RequestCode }, null)
                            </div>
                            
                             
                                    @if (String.IsNullOrEmpty(item.NoteContent))
                                    {
                                        <div class="panel-body">
                                            <label> Do not have note from previous shift</label>
                                        </div>

                                    }
                                    else
                                    {
                                        <div class="panel-body">
                                            <div class="form-inline">
                                                <div class="form-group">
                                                    <label>PreNote:</label>
                                                </div>
                                                <div class="form-group">
                                                    <label>@item.NoteContent</label>
                                                </div>
                                            </div>
                                        </div>
                                    }


                                        </div>
                                    }
                </div>
            </div>
        }

        </div><!-- /.col -->
        <div class="col-md-8">
            <div class="box box-primary">
                <div class="box-body no-padding">
                    <!-- THE CALENDAR -->
                    <div id="calendar"></div>
                </div><!-- /.box-body -->
            </div><!-- /. box -->
        </div><!-- /.col -->
    </div><!-- /.row -->


</section><!-- /.content -->

<script src="@Url.Content("~/scripts/plugins/fullcalendar/fullcalendar.min.js")" type="text/javascript"></script>
<!-- Page specific script -->
<script type="text/javascript">
            $(function() {

                /* initialize the external events
                 -----------------------------------------------------------------*/
                function ini_events(ele) {
                    ele.each(function() {

                        // create an Event Object (http://arshaw.com/fullcalendar/docs/event_data/Event_Object/)
                        // it doesn't need to have a start or end
                        var eventObject = {
                            title: $.trim($(this).text()) // use the element's text as the event title
                        };

                        // store the Event Object in the DOM element so we can get to it later
                        $(this).data('eventObject', eventObject);

                        // make the event draggable using jQuery UI
                        $(this).draggable({
                            zIndex: 1070,
                            revert: true, // will cause the event to go back to its
                            revertDuration: 0  //  original position after the drag
                        });

                    });
                }
                ini_events($('#external-events div.external-event'));

                /* initialize the calendar
                 -----------------------------------------------------------------*/
                //Date for the calendar events (dummy data)
                var date = new Date();
                var d = date.getDate(),
                        m = date.getMonth(),
                        y = date.getFullYear();
                $('#calendar').fullCalendar({
                    header: {
                        left: 'prev,next today',
                        center: 'title',
                        right: 'month,agendaWeek,agendaDay'
                    },

                    buttonText: {
//This is to add icons to the visible buttons
                        prev: "<span class='fa fa-caret-left'></span>",
                        next: "<span class='fa fa-caret-right'></span>",
                        today: 'today',
                        month: 'month',
                        week: 'week',
                        day: 'day'
                    },
                    eventClick: function(calEvent, jsEvent, view) {
                        if (calEvent.Status != '@Constants.StatusCode.REQUEST_DONE') {
                            alert('Event: ' + calEvent.title);
                            alert('Coordinates: ' + jsEvent.pageX + ',' + jsEvent.pageY);
                            alert('View: ' + view.name);

                            // change the border color just for fun
                            $(this).css('border-color', 'red');
                        }
                        

                    },
                    eventAfterRender: function (event, element, view) {
                        
                        if (event.Status == '@Constants.StatusCode.REQUEST_DONE') {
                            //event.color = "#FFB347"; //Em andamento
                            element.css('background-color', '#009900');
                        }
                        if (event.Status != '@Constants.StatusCode.REQUEST_DONE') {
                            //event.color = "#FFB347"; //Em andamento
                            element.css('background-color', '#cc0000');
                        }
                    },
                    allDaySlot: false,
                    defaultView: 'agendaDay',
                    minTime: '08:00:00',
                    maxTime: '21:00:00',
                    //Random default events
                    events: '@Url.Action("GetSchedule","Schedule", new { httpRoute = "" })',
                    editable: false,
                    droppable: true, // this allows things to be dropped onto the calendar !!!
                    drop: function(date, allDay) { // this function is called when something is dropped

                        // retrieve the dropped element's stored Event Object
                        var originalEventObject = $(this).data('eventObject');

                        // we need to copy it, so that multiple events don't have a reference to the same object
                        var copiedEventObject = $.extend({}, originalEventObject);

                        // assign it the date that was reported
                        copiedEventObject.start = date;
                        copiedEventObject.allDay = allDay;
                        copiedEventObject.backgroundColor = $(this).css("background-color");
                        copiedEventObject.borderColor = $(this).css("border-color");

                        // render the event on the calendar
                        // the last `true` argument determines if the event "sticks" (http://arshaw.com/fullcalendar/docs/event_rendering/renderEvent/)
                        $('#calendar').fullCalendar('renderEvent', copiedEventObject, true);

                        // is the "remove after drop" checkbox checked?
                        if ($('#drop-remove').is(':checked')) {
                            // if so, remove the element from the "Draggable Events" list
                            $(this).remove();
                        }

                    }
                });

                /* ADDING EVENTS */
                var currColor = "#f56954"; //Red by default
                //Color chooser button
                var colorChooser = $("#color-chooser-btn");
                $("#color-chooser > li > a").click(function(e) {
                    e.preventDefault();
                    //Save color
                    currColor = $(this).css("color");
                    //Add color effect to button
                    colorChooser
                            .css({"background-color": currColor, "border-color": currColor})
                            .html($(this).text()+' <span class="caret"></span>');
                });
                $("#add-new-event").click(function(e) {
                    e.preventDefault();
                    //Get value and make sure it is not null
                    var val = $("#new-event").val();
                    if (val.length == 0) {
                        return;
                    }

                    //Create event
                    var event = $("<div />");
                    event.css({"background-color": currColor, "border-color": currColor, "color": "#fff"}).addClass("external-event");
                    event.html(val);
                    $('#external-events').prepend(event);

                    //Add draggable funtionality
                    ini_events(event);

                    //Remove event from text input
                    $("#new-event").val("");
                });
            });
</script>