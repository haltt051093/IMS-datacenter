@using System.Web.UI.WebControls
@using IMS.Data.Business
@using IMS.Data.Models
@model IMS.Models.AccountCreateViewModel
@{
    ViewBag.Title = "CreateStaff";
}
<section class="main-content">
    <h2>Create new Staff</h2>
    @using (Html.BeginForm("CreateStaff", "Account", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Role, "Role", htmlAttributes: new { @class = "control-label col-md-2" })
            @{
                var roles = RoleBLO.Current.GetAll().Where(c => c.RoleName != "Customer").Where(c => c.RoleName != "Manager");
                var myList = new SelectList(roles, "RoleName", "RoleName");
            }
            @Html.DropDownListFor(model => model.Role, myList, new { @class = "form-control", style = "width:200px" })
            @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.GroupCode, "Group", htmlAttributes: new { @class = "control-label col-md-2" })
            @{
                var groups = GroupBLO.Current.GetAll().Where(g => g.GroupCode != "No Group");
                var myList1 = new SelectList(groups, "GroupCode", "GroupCode");
            }
            @Html.DropDownListFor(model => model.GroupCode, myList1, new { @class = "form-control", style = "width:200px" })
            @Html.ValidationMessageFor(model => model.GroupCode, "", new { @class = "text-danger" })
        </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Fullname, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.Fullname, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Fullname, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Identification, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.Identification, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Identification, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                       @Html.ActionLink("Cancel", "Index", "Account", htmlAttributes: new { @class = "btn btn-default pull-right" })
                    <button type="submit" class="btn btn-primary pull-right"><i class="fa fa-plus"></i> Add</button>
                    </div>
                }

</section>

