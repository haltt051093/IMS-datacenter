@model AccountCreateViewModel
@using IMS.Data.Business
@using IMS.Data.Models
@{
    ViewBag.Title = "ViewProfile";
}

<h2>ViewProfile</h2>


@Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Account</h4>
    <hr />

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.Username)
    @Html.HiddenFor(model => model.Password)

    <div class="form-group">
        @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @if(Model.Status)
                {
                    @Html.Raw("Activate")
                }
                else
                {
                    @Html.Raw("Deactivate")
                }
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Fullname, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.Fullname, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Fullname, "", new { @class = "text-danger" })
        </div>
    </div>
    @if (!User.IsInRole("Customer"))
    {
        <div class="form-group">
            @Html.LabelFor(model => model.GroupCode, "Group", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    var group = GroupBLO.Current.GetAll();
                    var myList1 = new SelectList(group, "GroupName", "GroupName");
                }

                @Html.DisplayFor(model => model.GroupCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GroupCode, "", new { @class = "text-danger" })
            </div>
        </div>
                    }
    <div class="form-group">
        @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Identification, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.Identification, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Identification, "", new { @class = "text-danger" })
        </div>
    </div>

</div>


@*<div>
        @if (User.IsInRole("Customer"))
        {

            @Html.HiddenFor(model => model.GroupCode, "GroupName")
        }
    </div>*@


@*<div>
        @if (User.IsInRole("Customer"))
        {
            @Html.HiddenFor(model => model.GroupCode)
        }
    </div>*@

@*<div>
        @if (!User.IsInRole("Customer"))
        {
            @Html.ActionLink("Back to List", "Index")
        }

    </div>*@

@*@{
        var session = Session[Constants.Session.USER_LOGIN];
        var action = "";
        var ID = 0;
        if (session != null)
        {
            Account obj = (Account)session;
            action = obj.Role == "Customer" ? "EditCustomer" : "EditStaff";
            ID = obj.Id;
        }
        @Html.ActionLink("Edit", @action, new { id = @ID })
    }*@
