@model AccountCreateViewModel
@{
    ViewBag.Title = Pages.ViewProfile;
    ViewBag.PageTitle = Pages.ViewProfile;
    ViewBag.Breadcrumbs = new List<BreadcrumbModel>
    {
        new BreadcrumbModel("Home", "Index", Pages.Home),
        new BreadcrumbModel("Account", "ViewProfile", Pages.ViewProfile)
    };
}


<form action="#" method="POST">
    <section class="main-content">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.Username)
        @Html.HiddenFor(model => model.Password)
        <div class="@Constants.HtmlFormat.FORM_ROW_CLASS">
            <div class="@Constants.HtmlFormat.FORM_LABEL_CLASS">
                @Html.LabelFor(model => model.Username)
            </div>
            <div class="@Constants.HtmlFormat.FORM_CONTROL_CLASS">
                @Html.DisplayFor(model => model.Username, new { @class = Constants.HtmlFormat.FORM_INNER_CLASS })
                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
            </div>
        </div>
        @if (Model.Company != null)
        {
            <div class="@Constants.HtmlFormat.FORM_ROW_CLASS">
                <div class="@Constants.HtmlFormat.FORM_LABEL_CLASS">
                    @Html.LabelFor(model => model.Company)
                </div>
                <div class="@Constants.HtmlFormat.FORM_CONTROL_CLASS">
                    @Html.DisplayFor(model => model.Company, new { @class = Constants.HtmlFormat.FORM_INNER_CLASS })
                    @Html.ValidationMessageFor(model => model.Company, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="@Constants.HtmlFormat.FORM_ROW_CLASS">
                <div class="@Constants.HtmlFormat.FORM_LABEL_CLASS">
                    @Html.Label("Representative")
                </div>
                <div class="@Constants.HtmlFormat.FORM_CONTROL_CLASS">
                    @Html.DisplayFor(model => model.Fullname, new { @class = Constants.HtmlFormat.FORM_INNER_CLASS })
                    @Html.ValidationMessageFor(model => model.Fullname, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        else
        {
            <div class="@Constants.HtmlFormat.FORM_ROW_CLASS">
                <div class="@Constants.HtmlFormat.FORM_LABEL_CLASS">
                    @Html.Label("Full name")
                </div>
                <div class="@Constants.HtmlFormat.FORM_CONTROL_CLASS">
                    @Html.DisplayFor(model => model.Fullname, new { @class = Constants.HtmlFormat.FORM_INNER_CLASS })
                    @Html.ValidationMessageFor(model => model.Fullname, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        @if (Model.Role != Constants.Role.CUSTOMER)
        {
            <div class="@Constants.HtmlFormat.FORM_ROW_CLASS">
                <div class="@Constants.HtmlFormat.FORM_LABEL_CLASS">
                    @Html.LabelFor(model => model.Role)
                </div>
                <div class="@Constants.HtmlFormat.FORM_CONTROL_CLASS">
                    @Html.DisplayFor(model => model.Role, new { @class = Constants.HtmlFormat.FORM_INNER_CLASS })
                    @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
                </div>
            </div>
            if (Model.Role != Constants.Role.MANAGER)
            {
                <div class="@Constants.HtmlFormat.FORM_ROW_CLASS">
                    <div class="@Constants.HtmlFormat.FORM_LABEL_CLASS">
                        @Html.LabelFor(model => model.GroupCode)
                    </div>
                    <div class="@Constants.HtmlFormat.FORM_CONTROL_CLASS">
                        @Html.DisplayFor(model => model.GroupCode, new { @class = Constants.HtmlFormat.FORM_INNER_CLASS })
                        @Html.ValidationMessageFor(model => model.GroupCode, "", new { @class = "text-danger" })
                    </div>
                </div>
            }
        }
        <div class="@Constants.HtmlFormat.FORM_ROW_CLASS">
            <div class="@Constants.HtmlFormat.FORM_LABEL_CLASS">
                @Html.LabelFor(model => model.Status)
            </div>
            <div class="@Constants.HtmlFormat.FORM_CONTROL_CLASS">
                @if (Model.Status)
                {
                    @Html.Raw("Activate")
                }
                else
                {
                    @Html.Raw("Deactivate")
                }
            </div>
        </div>
        <div class="@Constants.HtmlFormat.FORM_ROW_CLASS">
            <div class="@Constants.HtmlFormat.FORM_LABEL_CLASS">
                @Html.LabelFor(model => model.Phone)
            </div>
            <div class="@Constants.HtmlFormat.FORM_CONTROL_CLASS">
                @Html.DisplayFor(model => model.Phone, new { @class = Constants.HtmlFormat.FORM_INNER_CLASS })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="@Constants.HtmlFormat.FORM_ROW_CLASS">
            <div class="@Constants.HtmlFormat.FORM_LABEL_CLASS">
                @Html.LabelFor(model => model.Email)
            </div>
            <div class="@Constants.HtmlFormat.FORM_CONTROL_CLASS">
                @Html.DisplayFor(model => model.Email, new { @class = Constants.HtmlFormat.FORM_INNER_CLASS })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="@Constants.HtmlFormat.FORM_ROW_CLASS">
            <div class="@Constants.HtmlFormat.FORM_LABEL_CLASS">
                @Html.LabelFor(model => model.Address)
            </div>
            <div class="@Constants.HtmlFormat.FORM_CONTROL_CLASS">
                @Html.DisplayFor(model => model.Address, new { @class = Constants.HtmlFormat.FORM_INNER_CLASS })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="@Constants.HtmlFormat.FORM_ROW_CLASS">
            <div class="@Constants.HtmlFormat.FORM_LABEL_CLASS">
                @Html.LabelFor(model => model.Identification)
            </div>
            <div class="@Constants.HtmlFormat.FORM_CONTROL_CLASS">
                @Html.DisplayFor(model => model.Identification, new { @class = Constants.HtmlFormat.FORM_INNER_CLASS })
                @Html.ValidationMessageFor(model => model.Identification, "", new { @class = "text-danger" })
            </div>
        </div>
        @if (Model.Role == "Customer" || Model.Role == "Manager" || Model.Username == Model.UserLogin)
        {
            @Html.ActionLink("Edit Profile", "EditCustomer", "Account", new { username = Model.Username }, new { @class = "btn btn-primary" })           
        }
        else if (Model.Role == "Staff" || Model.Role == "Shift Head")
        {
            @Html.ActionLink("Edit Profile", "EditStaff", "Account", new { username = Model.Username }, new { @class = "btn btn-primary" })         
        }
        @if (Model.Username == Model.UserLogin)
        {
            @Html.ActionLink("Change Password", "GetChangePW", "Account", new { @class = "btn btn-primary col-xs-offset-1" })
        }
        @if (Model.Username != Model.UserLogin)
        {

            if (Model.Status)
            {
                <a class="btn btn-danger" data-toggle="modal" data-target="#deactivate-modal"><i class="fa fa-pencil"></i> Deactivate Account</a>
            }
            else
            {
                <a class="btn btn-warning" data-toggle="modal" data-target="#activate-modal"><i class="fa fa-pencil"></i> Activate Account</a>
            }

        }
    </section>

    <div id="deactivate-modal" class="@Constants.HtmlFormat.MODAL_CLASS" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog" style="width: 350px">
            <div class="modal-content">


                    <div class="modal-body">
                        <h4>Are you sure to deativate this account?</h4>
                        @Html.HiddenFor(model=>model.Username)
                    </div>
                    <div class="modal-footer">
                        <button type="submit" name="Button" value="Deactivate" class="@Constants.HtmlFormat.PRIMARY_BUTTON_CLASS">
                            @Labels.DialogOK
                        </button>
                        <button type="button" name="@Constants.FormAction.ACTION_NAME" value="@Constants.FormAction.CANCEL_ACTION" class="@Constants.HtmlFormat.DEFAULT_BUTTON_CLASS"
                                data-dismiss="modal">
                            @Labels.DialogCancel
                        </button>

                    </div>
            
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->
    <div id="activate-modal" class="@Constants.HtmlFormat.MODAL_CLASS" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog" style="width: 350px">
            <div class="modal-content">


                <div class="modal-body">
                    <h4>Are you sure to activate this account?</h4>
                    @Html.HiddenFor(model => model.Username)
                </div>
                <div class="modal-footer">
                    <button type="submit" name="Button" value="Activate" class="@Constants.HtmlFormat.PRIMARY_BUTTON_CLASS">
                        @Labels.DialogOK
                    </button>
                    <button type="button" name="@Constants.FormAction.ACTION_NAME" value="@Constants.FormAction.CANCEL_ACTION" class="@Constants.HtmlFormat.DEFAULT_BUTTON_CLASS"
                            data-dismiss="modal">
                        @Labels.DialogCancel
                    </button>

                </div>

            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->
</form>