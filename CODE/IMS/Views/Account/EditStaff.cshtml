@using IMS.Core
@using IMS.Data.Business
@using IMS.Data.Models
@model IMS.Models.AccountCreateViewModel

@{
    ViewBag.Title = Pages.EditProfile;
    ViewBag.PageTitle = Pages.EditProfile;
    ViewBag.Breadcrumbs = new List<BreadcrumbModel>
    {
        new BreadcrumbModel("Home", "Index", Pages.Home),
        new BreadcrumbModel("Account", "EditStaff", Pages.EditProfile)
    };
}

<section class="main-content">
 
    @using (Html.BeginForm("EditStaff", "Account", FormMethod.Post))
    {      
        <div class="@Constants.HtmlFormat.FORM_ROW_CLASS">
            <div class="@Constants.HtmlFormat.FORM_LABEL_CLASS">
                @Html.LabelFor(model => model.Username)
                @Html.HiddenFor(model => model.Username)
            </div>
            <div class="@Constants.HtmlFormat.FORM_TEXTBOX_CLASS">
                @Html.TextBoxFor(model => model.Username, new { @class = Constants.HtmlFormat.FORM_INNER_CLASS, @disabled ="disabled" })
                @Html.ValidationMessageFor(model => model.Username)
            </div>
            <div>
                <label style="color: red">(*)</label>
            </div>
        </div>
        <div class="@Constants.HtmlFormat.FORM_ROW_CLASS">
            <div class="@Constants.HtmlFormat.FORM_LABEL_CLASS">
                @Html.LabelFor(model => model.GroupCode, "Group")
            </div>
            <div class="@Constants.HtmlFormat.FORM_TEXTBOX_CLASS">
                @Html.DropDownListFor(model => model.GroupCode, Model.Groups, "--Select Group--", new { @class = Constants.HtmlFormat.FORM_INNER_CLASS, style = "width:200px" })
                @Html.ValidationMessageFor(model => model.GroupCode)
            </div>
            <div>
                <label style="color: red">(*)</label>
            </div>
        </div>
        <div class="@Constants.HtmlFormat.FORM_ROW_CLASS">
            <div class="@Constants.HtmlFormat.FORM_LABEL_CLASS">
                @Html.LabelFor(model => model.Role)
                @{
                    var roles = RoleBLO.Current.GetAll().Where(c => c.RoleName != "Customer").Where(c => c.RoleName != "Manager");
                    var myList = new SelectList(roles, "RoleName", "RoleName");
                }
            </div>
            <div class="@Constants.HtmlFormat.FORM_TEXTBOX_CLASS">
                @Html.DropDownListFor(model => model.Role, myList, "--Select Role--", new { @class = Constants.HtmlFormat.FORM_INNER_CLASS, style = "width:200px" })
                @Html.ValidationMessageFor(model => model.Role)
            </div>
            <div>
                <label style="color: red">(*)</label>
            </div>
        </div>

        <div class="@Constants.HtmlFormat.FORM_ROW_CLASS">
            <div class="@Constants.HtmlFormat.FORM_LABEL_CLASS">
                @Html.LabelFor(model => model.Fullname)
            </div>
            <div class="@Constants.HtmlFormat.FORM_TEXTBOX_CLASS">
                @Html.TextBoxFor(model => model.Fullname, new { @class = Constants.HtmlFormat.FORM_INNER_CLASS })
                @Html.ValidationMessageFor(model => model.Fullname)
            </div>
            <div>
                <label style="color: red">(*)</label>
            </div>
        </div>
        <div class="@Constants.HtmlFormat.FORM_ROW_CLASS">
            <div class="@Constants.HtmlFormat.FORM_LABEL_CLASS">
                @Html.LabelFor(model => model.Phone)
            </div>
            <div class="@Constants.HtmlFormat.FORM_TEXTBOX_CLASS">
                @Html.TextBoxFor(model => model.Phone, new { @class = Constants.HtmlFormat.FORM_INNER_CLASS })
                @Html.ValidationMessageFor(model => model.Phone)
            </div>
            <div>
                <label style="color: red">(*)</label>
            </div>
        </div>
        <div class="@Constants.HtmlFormat.FORM_ROW_CLASS">
            <div class="@Constants.HtmlFormat.FORM_LABEL_CLASS">
                @Html.LabelFor(model => model.Email)
            </div>
            <div class="@Constants.HtmlFormat.FORM_TEXTBOX_CLASS">
                @Html.TextBoxFor(model => model.Email, new { @class = Constants.HtmlFormat.FORM_INNER_CLASS })
                @Html.ValidationMessageFor(model => model.Email)
            </div>
            <div>
                <label style="color: red">(*)</label>
            </div>
        </div>
        <div class="@Constants.HtmlFormat.FORM_ROW_CLASS">
            <div class="@Constants.HtmlFormat.FORM_LABEL_CLASS">
                @Html.LabelFor(model => model.Address)
            </div>
            <div class="@Constants.HtmlFormat.FORM_TEXTBOX_CLASS">
                @Html.TextBoxFor(model => model.Address, new { @class = Constants.HtmlFormat.FORM_INNER_CLASS })
                @Html.ValidationMessageFor(model => model.Address)
            </div>
            <div>
                <label style="color: red">(*)</label>
            </div>
        </div>
        <div class="@Constants.HtmlFormat.FORM_ROW_CLASS">
            <div class="@Constants.HtmlFormat.FORM_LABEL_CLASS">
                @Html.LabelFor(model => model.Identification)
            </div>
            <div class="@Constants.HtmlFormat.FORM_TEXTBOX_CLASS">
                @Html.TextBoxFor(model => model.Identification, new { @class = Constants.HtmlFormat.FORM_INNER_CLASS })
                @Html.ValidationMessageFor(model => model.Identification)
            </div>
            <div>
                <label style="color: red">(*)</label>
            </div>
        </div>
        <div class="@Constants.HtmlFormat.FORM_ROW_CLASS">
            <div class="@Constants.HtmlFormat.FORM_TEXTBOX_CLASS col-xs-offset-2">
                <button type="submit" class="btn btn-primary">@Labels.Update</button>
                @Html.ActionLink("Cancel", "ViewProfile", "Account", new { username = Model.Username }, htmlAttributes: new { @class = "btn btn-default" })
            </div>
        </div>
        
                }

</section>

<script>
    function verifyRole() {
        $('#Role option').prop('disabled', true);
        $('#Role option[value=""]').prop('disabled', false);
        var groupCode = $('#GroupCode').val();
        var userName = $('#Username').val();
        post('@Url.Action("GetAvailableRoles", "Account", new { httproute = "" })', {
            GroupCode: groupCode,
            UserName: userName
        }, function (data) {
            $(data).each(function (i, role) {
                $('#Role option[value="' + role + '"]').prop('disabled', false);
            });
        });
    }


    $('#GroupCode').change(function() {
        $('#Role').val('');
        verifyRole();
    });

    verifyRole();
</script>