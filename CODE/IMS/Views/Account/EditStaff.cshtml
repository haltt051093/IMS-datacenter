@using IMS.Core
@using IMS.Data.Business
@using IMS.Data.Models
@model IMS.Models.AccountCreateViewModel

@{
    ViewBag.Title = "EditStaff";
}

<h2>EditStaff</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Account</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.Password)
        <div class="form-group">
            @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (ViewBag.role != "Manager")
        {
            <div class="form-group">

                @Html.LabelFor(model => model.Role, "Role", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @{
                        var roles = RoleBLO.Current.GetAll().Where(c => c.RoleName != "Customer").Where(c => c.RoleName != "Manager");
                        var myList = new SelectList(roles, "RoleName", "RoleName");
                        //var roles = RoleBLO.Current.GetAll();
                        //SelectList myList = new SelectList(roles, "RoleName", "RoleName");
                    }
                    @Html.DropDownList("Role", myList, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
                </div>


            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @{
                        IEnumerable<SelectListItem> tau = new List<SelectListItem>()
                        {
                            new SelectListItem()
                            {
                                Text = "Active",
                                Value = "true"
                            },
                            new SelectListItem()
                            {
                                Text = "Deactive",
                                Value = "false"
                            }
                        };
                        SelectList status = new SelectList(tau, "Value", "Text", Model.Status);
                    }
                    @Html.DropDownList("Status", status, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.GroupCode, "Group", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @{
                        var group = GroupBLO.Current.GetAll();
                        var myList1 = new SelectList(group, "GroupCode", "GroupCode");
                    }
                    @Html.DropDownList("GroupCode", myList1, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.GroupCode, "", new { @class = "text-danger" })
                </div>

            </div>
                        }
                        else
                        {
                            @Html.HiddenFor(model => model.Role)
                            @Html.HiddenFor(model => model.Status)
                            @Html.HiddenFor(model => model.GroupCode)
                        }



        
        <div class="form-group">
            @Html.LabelFor(model => model.Fullname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Fullname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Fullname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Identification, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Identification, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Identification, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
                        }

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
