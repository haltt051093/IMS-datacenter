@using IMS.Data.Business
@model AccountIndexViewModel


@{
    if (User.IsInRole("Manager")) {
        ViewBag.Title = Pages.AccountIndex;
        ViewBag.PageTitle = Pages.AccountIndex;
    }
    if (User.IsInRole("Shift Head") || User.IsInRole("Staff"))
    {
        ViewBag.Title = Pages.Customer;
        ViewBag.PageTitle = Pages.Customer;
    }
    ViewBag.Role = "Shift Head";
    ViewBag.Breadcrumbs = new List<BreadcrumbModel>
    {
        new BreadcrumbModel("Home", "Index", Pages.Home),
        new BreadcrumbModel("Account", "Index", Pages.AccountIndex)
    };
}

<section class="main-content">
    @if (User.IsInRole("Manager"))
    {
        <a class="btn btn-primary" data-toggle="modal" data-target="#addstaff-modal"><i class="fa fa-plus"></i> Add new staff</a>
        <a class="btn btn-primary" data-toggle="modal" data-target="#addcustomer-modal"><i class="fa fa-plus"></i> Add new customer</a>

    }
    @if (User.IsInRole("Shift Head") || User.IsInRole("Staff"))
    {
        <a class="btn btn-primary" data-toggle="modal" data-target="#addcustomer-modal"><i class="fa fa-plus"></i> Add new customer</a>
    }
</section>


<section>
    @if (User.IsInRole("Manager"))
    {
        <div class="row hide">
            <div id="dropdown-template" class="col-xs-3">
                <label>IP Address: @Html.DropDownListFor(model => model.RoleSearch, Model.Roles, "All Roles", new { @class = "form-control input-sm", style = "width: 150px" }) </label>
            </div>
        </div>
    }

    <table id="example1" class="table table-bordered table-hover">
        
            <thead>
                <tr style="background-color: #404040">
                    <th><span style="color: ghostwhite">Username</span>
                    <th><span style="color: ghostwhite">Fullname</span>
                    <th><span style="color: ghostwhite">Role</span>
                    <th><span style="color: ghostwhite">Phone</span>
                    <th><span style="color: ghostwhite">Email</span>
                    <th><span style="color: ghostwhite">Address</span>
                    <th><span style="color: ghostwhite">Group</span>

                </tr>
            </thead>
            <tfoot>
                <tr style="background-color: #404040">
                    <th><span style="color: ghostwhite">Username</span>
                    <th><span style="color: ghostwhite">Fullname</span>
                    <th><span style="color: ghostwhite">Role</span>
                    <th><span style="color: ghostwhite">Phone</span>
                    <th><span style="color: ghostwhite">Email</span>
                    <th><span style="color: ghostwhite">Address</span>
                    <th><span style="color: ghostwhite">Group</span>
                </tr>
            </tfoot>
        


    </table>
       
</section>

<!-- EDIT CUSTOMER MODAL -->
<div class="modal fade" id="editcustomer-modal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog" style="width: 500px;height: 500px">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title"><i class="fa fa-edit"></i> Edit account of Customer</h4>
            </div>
            <form action="#" method="post">
                <div class="modal-body">
                    <div class="form-group">
                        <label for="exampleInputEmail1">Username</label>
                        <input type="text" class="form-control" id="exampleInputEmail1" value="haltt" disabled="true">
                    </div>
                    <div class="form-group">
                        <label for="exampleInputPassword1">Status</label>
                        <select>
                            <option>Activate</option>
                            <option>Deactivate</option>h
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="exampleInputPassword1">Fullname</label>
                        <input type="text" class="form-control" id="exampleInputPassword1" value="Lê Thị Thu Hà">
                    </div>
                    <div class="form-group">
                        <label for="exampleInputPassword1">Phone</label>
                        <input type="text" class="form-control" id="exampleInputPassword1" value="091234567">
                    </div>
                    <div class="form-group">
                        <label for="exampleInputPassword1">Email</label>
                        <input type="text" checked="true" class="form-control" id="" value="haltt@gmail.com">
                    </div>
                    <div class="form-group">
                        <label for="exampleInputPassword1">Address</label>
                        <input type="text" checked="true" class="form-control" id="exampleInputPassword1" value="19 Quang Trung">
                    </div>
                    <div class="form-group">
                        <label for="exampleInputPassword1">Identification</label>
                        <input type="text" checked="true" class="form-control" id="exampleInputPassword1" value="1234567890">
                    </div>
                </div>
                <div class="modal-footer clearfix">
                    <button type="button" class="btn btn-danger" data-dismiss="modal"><i class="fa fa-times"></i> Cancel</button>
                    <button type="submit" class="btn btn-primary pull-left"> Change</button>
                </div>
            </form>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->
<!-- EDIT STAFF MODAL -->
<div class="modal fade" id="editstaff-modal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog" style="width: 500px;height: 500px">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title"><i class="fa fa-edit"></i> Edit account of Staff</h4>
            </div>
            <form action="#" method="post">
                <div class="modal-body">
                    <div class="form-group">
                        <label for="exampleInputEmail1">Username</label>
                        <input type="text" class="form-control" id="exampleInputEmail1" value="haltt" disabled="true">
                    </div>
                    <div class="form-group">
                        <label for="exampleInputPassword1">Role</label>
                        <select>
                            <option>Shift Head</option>
                            <option>Staff</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="exampleInputPassword1">Status</label>
                        <select>
                            <option>Activate</option>
                            <option>Deactivate</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="exampleInputPassword1">Group</label>
                        <select>
                            <option>Group 1</option>
                            <option>Group 2</option>
                            <option>Group 3</option>
                            <option>Group 4</option>
                            <option>No Group</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="exampleInputPassword1">Fullname</label>
                        <input type="text" class="form-control" id="exampleInputPassword1" value="Lê Thị Thu Hà">
                    </div>
                    <div class="form-group">
                        <label for="exampleInputPassword1">Phone</label>
                        <input type="text" class="form-control" id="exampleInputPassword1" value="091234567">
                    </div>
                    <div class="form-group">
                        <label for="exampleInputPassword1">Email</label>
                        <input type="text" checked="true" class="form-control" id="" value="haltt@gmail.com">
                    </div>
                    <div class="form-group">
                        <label for="exampleInputPassword1">Address</label>
                        <input type="text" checked="true" class="form-control" id="exampleInputPassword1" value="19 Quang Trung">
                    </div>
                    <div class="form-group">
                        <label for="exampleInputPassword1">Identification</label>
                        <input type="text" checked="true" class="form-control" id="exampleInputPassword1" value="1234567890">
                    </div>
                </div>
                <div class="modal-footer clearfix">

                    <button type="button" class="btn btn-danger" data-dismiss="modal"><i class="fa fa-times"></i> Cancel</button>

                    <button type="submit" class="btn btn-primary pull-left"> Change</button>
                </div>
            </form>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->
<!-- ADD STAFF MODAL -->
<div class="modal fade" id="addstaff-modal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog" style="width: 500px">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title"><i class="fa fa-plus"></i> Add new staff</h4>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("CreateStaff", "Account", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Role, "Role", htmlAttributes: new { @class = "control-label col-md-2" })
                        @{
                            var roles = RoleBLO.Current.GetAll().Where(c => c.RoleName != "Customer").Where(c => c.RoleName != "Manager");
                            var myList = new SelectList(roles, "RoleName", "RoleName");
                        }
                        @Html.DropDownListFor(model => model.Role, myList, new { @class = "form-control", style = "width:200px" })
                        @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.GroupCode, "Group", htmlAttributes: new { @class = "control-label col-md-2" })
                        @{
                            var groups = GroupBLO.Current.GetAll().Where(g => g.GroupCode != "No Group");
                            var myList1 = new SelectList(groups, "GroupCode", "GroupCode");
                        }
                        @Html.DropDownListFor(model => model.GroupCode, myList1, new { @class = "form-control", style = "width:200px" })
                        @Html.ValidationMessageFor(model => model.GroupCode, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Fullname, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.Fullname, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Fullname, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Identification, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.Identification, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Identification, "", new { @class = "text-danger" })
                    </div>
                    @*<div class="form-group">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new {@class = "control-label col-md-2"})
                            @Html.EditorFor(model => model.Email, new {@class = Constants.HtmlFormat.FORM_INNER_CLASS})
                            @Html.ValidationMessageFor(model => model.Email, "", new {@class = "text-danger"})
                        </div>*@
                            @*<div class="form-group">
                                    @Html.EditorFor(model => model.Fullname, new { @class = Constants.HtmlFormat.FORM_INNER_CLASS })
                                    @Html.ValidationMessageFor(model => model.Fullname)
                                </div>*@
                            @*<div class="form-group">
                                    @Html.LabelFor(model => model.Phone, htmlAttributes: new {@class = "control-label col-md-2"})
                                    @Html.EditorFor(model => model.Phone, new { @class = Constants.HtmlFormat.FORM_INNER_CLASS })
                                    @Html.ValidationMessageFor(model => model.Phone)
                                </div>*@
                            @*<div class="form-group">
                                    @Html.LabelFor(model => model.Address, htmlAttributes: new {@class = "control-label col-md-2"})
                                    @Html.EditorFor(model => model.Address, new { @class = Constants.HtmlFormat.FORM_INNER_CLASS })
                                    @Html.ValidationMessageFor(model => model.Address)
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Identification, htmlAttributes: new {@class = "control-label col-md-2"})
                                    @Html.EditorFor(model => model.Identification, new { @class = Constants.HtmlFormat.FORM_INNER_CLASS })
                                    @Html.ValidationMessageFor(model => model.Identification, "", new {@class = "text-danger"})
                                </div>*@
                            <div class="modal-footer clearfix">
                                <button type="submit" class="btn btn-primary pull-left"><i class="fa fa-plus"></i> Add</button>
                                <button type="button" class="btn btn-danger" data-dismiss="modal"><i class="fa fa-times"></i> Cancel</button>
                            </div>
                            }
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->
<!-- ADD CUSTOMER MODAL -->
<div class="modal fade" id="addcustomer-modal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog" style="width: 500px">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title"><i class="fa fa-plus"></i> Add new customer</h4>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("CreateCustomer", "Account", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Fullname, htmlAttributes: new {@class = "control-label col-md-2"})
                        @Html.EditorFor(model => model.Fullname, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.Fullname, "", new {@class = "text-danger"})
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Company, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.Company, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Company, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Identification, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.Identification, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Identification, "", new { @class = "text-danger" })
                    </div>
                    <div class="modal-footer clearfix">
                        <button type="button" class="btn btn-danger" data-dismiss="modal"><i class="fa fa-times"></i> Cancel</button>
                        <button type="submit" class="btn btn-primary pull-left"><i class="fa fa-plus"></i> Add</button>
                    </div>
                }
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->
<!-- page script -->
@*<script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>*@
<script>
    $.fn.dataTable.ext.search.push(
        function (settings, data, dataIndex) {
            var role = $('#RoleSearch').val();
            if (role == '') {
                return true;
            }
            if (role == data[2]) {
                return true;
            }
            
            if (role == null) {
                return true;
            }
            return false;
        }
    );
</script>

<script type="text/javascript">
    var table = $('#example1').DataTable({
        dom: '<lf<t>ip>',
        processing: true,
        ajax: "@Url.Action("GetAll", "Account", new {httproute = "", role = Model.RoleLogin })",
        columns: [
            { data: "Username" },
            { data: "Fullname" },
            { data: "Role" },
            { data: "Phone" },
            { data: "Email" },
            { data: "Address" },
            { data: "GroupCode" },
            { data: "Status" }
        ],
        iDisplayLength: 10,
        aLengthMenu: [[10, 25, 50, 100], [10, 25, 50, 100]],
       
        fnRowCallback: function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {
            $(nRow).click(function () {
                if (aData.Fullname != null) {
                    var url = CONSTANT.authority + '@Url.Action("ViewProfile", "Account")' + '?username=' + aData.Username;
                    window.location.assign(url);
                }
            });
            var row = $(nRow);
            //var actionCell = $(nRow.cells[4]);
            switch (aData.Status) {
                case false:
                    row.css('background-color', '#ffe6e6');
               
                break;
            
            }
        },
 
  columnDefs: [{
      targets: [0],
            visible: false,
            searchable: true
        },
        {
      targets: [2],
            visible: false,
            searchable: true
        }, {     
        
      targets:[7],
            visible: false,
            searchable: true
        }]
    });

    $('#example1_filter').append($('#dropdown-template').html());
    $('#dropdown-template').html('');

    $('#RoleSearch').change(function () {
        table.draw();
    });


</script>

@section Styles {
    <style>
    </style>
}


