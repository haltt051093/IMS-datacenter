@model ProcessRequestChangeIPViewModel
@{
    ViewBag.Title = Pages.ProcessRequestChangeIP;
    ViewBag.PageTitle = Pages.ProcessRequestChangeIP;
    ViewBag.Breadcrumbs = new List<BreadcrumbModel>
    {
        new BreadcrumbModel("Home", "Index", Pages.Home),
        new BreadcrumbModel("ProcessRequest", "Index", Pages.ProcessRequest),
        new BreadcrumbModel("ProcessRequest", "Detail", Pages.ProcessRequestChangeIP)
    };
}

<section class="main-content">
    @using (Html.BeginForm("ProcessRequestChangeIp", "ProcessRequest", FormMethod.Post))
            {
        <div class="row">
            <div class="col-xs-6">
                <div class="@Constants.HtmlFormat.MODAL_ROW_CLASS">
                    <div class="@Constants.HtmlFormat.MODAL_LABEL_CLASS">
                        @Html.LabelFor(model => model.RequestInfo.RequestCode)
                    </div>
                    <div class="@Constants.HtmlFormat.MODAL_CONTROL_CLASS">
                        @Html.DisplayFor(model => model.RequestInfo.RequestCode, new { @class = Constants.HtmlFormat.MODAL_INNER_CLASS })
                    </div>
                </div>
                <div class="@Constants.HtmlFormat.MODAL_ROW_CLASS">
                    <div class="@Constants.HtmlFormat.MODAL_LABEL_CLASS">
                        @Html.LabelFor(model => model.RequestInfo.StatusName)
                    </div>
                    <div class="@Constants.HtmlFormat.MODAL_CONTROL_CLASS">
                        @Html.DisplayFor(model => model.RequestInfo.StatusName, new { @class = Constants.HtmlFormat.MODAL_INNER_CLASS })
                    </div>
                </div>
                <div class="@Constants.HtmlFormat.MODAL_ROW_CLASS">
                    <div class="@Constants.HtmlFormat.MODAL_LABEL_CLASS">
                        @Html.LabelFor(model => model.RequestInfo.RequestedTime)
                    </div>
                    <div class="@Constants.HtmlFormat.MODAL_CONTROL_CLASS">
                        @Html.DisplayFor(model => model.RequestInfo.RequestedTime, new { @class = Constants.HtmlFormat.MODAL_INNER_CLASS })
                    </div>
                </div>
                <div class="@Constants.HtmlFormat.MODAL_ROW_CLASS">
                    <div class="@Constants.HtmlFormat.MODAL_LABEL_CLASS">
                        @Html.LabelFor(model => model.RequestInfo.StaffCode)
                    </div>
                    @if (Model.RequestInfo.StatusCode == Constants.StatusCode.REQUEST_PENDING)
                    {
                        <div class="@Constants.HtmlFormat.MODAL_CONTROL_CLASS">
                            @Html.DropDownListFor(model => model.RequestInfo.StaffCode, Model.StaffCodeOptions, new { @class = Constants.HtmlFormat.FORM_INNER_CLASS })
                        </div>
                    }
                    else
                    {
                        <div class="@Constants.HtmlFormat.MODAL_CONTROL_CLASS">
                            @Html.ActionLink(Model.RequestInfo.StaffName, "ViewProfile", "Account",
                                new { username = Model.RequestInfo.StaffCode }, null)
                            @Html.HiddenFor(model => model.RequestInfo.StaffCode, new { @class = Constants.HtmlFormat.FORM_INNER_CLASS })
                        </div>
                    }
                </div>
            </div>
            <div class="col-xs-6">
                <div class="@Constants.HtmlFormat.MODAL_ROW_CLASS">
                    <div class="@Constants.HtmlFormat.MODAL_LABEL_CLASS">
                        @Html.LabelFor(model => model.CustomerInfo.CustomerName)
                    </div>
                    <div class="@Constants.HtmlFormat.MODAL_CONTROL_CLASS">
                        @Html.ActionLink(Model.CustomerInfo.CustomerName, "ViewProfile", "Account", new { username = Model.CustomerInfo.Customer }, null)
                    </div>
                </div>
                @if (Model.CustomerInfo.Company != null)
                {
                    <div class="@Constants.HtmlFormat.MODAL_ROW_CLASS">
                        <div class="@Constants.HtmlFormat.MODAL_LABEL_CLASS">
                            @Html.LabelFor(model => model.CustomerInfo.Company)
                        </div>
                        <div class="@Constants.HtmlFormat.MODAL_CONTROL_CLASS">
                            @Html.DisplayFor(model => model.CustomerInfo.Company, new { @class = Constants.HtmlFormat.MODAL_INNER_CLASS })
                        </div>
                    </div>
                }
                <div class="@Constants.HtmlFormat.MODAL_ROW_CLASS">
                    <div class="@Constants.HtmlFormat.MODAL_LABEL_CLASS">
                        @Html.LabelFor(model => model.CustomerInfo.Phone)
                    </div>
                    <div class="@Constants.HtmlFormat.MODAL_CONTROL_CLASS">
                        @Html.DisplayFor(model => model.CustomerInfo.Phone, new { @class = Constants.HtmlFormat.MODAL_INNER_CLASS })
                    </div>
                </div>
            </div>
        </div>
        <hr />
        <div class="@Constants.HtmlFormat.FORM_ROW_CLASS">
            <div class="@Constants.HtmlFormat.FORM_LABEL_CLASS">
                @Html.LabelFor(model => model.SelectedServer)
            </div>
            <div class="@Constants.HtmlFormat.FORM_CONTROL_CLASS">
                @Html.DisplayFor(model => model.SelectedServer, new { @class = Constants.HtmlFormat.FORM_INNER_CLASS })
            </div>
        </div>
        <div class="@Constants.HtmlFormat.FORM_ROW_CLASS">
            <div class="@Constants.HtmlFormat.FORM_LABEL_CLASS">
                @Html.LabelFor(model => model.RequestInfo.Description)
            </div>
            <div class="@Constants.HtmlFormat.FORM_CONTROL_CLASS">
                @Html.DisplayFor(model => model.RequestInfo.Description, new { @class = Constants.HtmlFormat.FORM_INNER_CLASS })
            </div>
        </div>

        <div class="@Constants.HtmlFormat.FORM_ROW_CLASS">
            <div class="@Constants.HtmlFormat.FORM_LABEL_CLASS">
                @Html.LabelFor(model => model.NewIPs)
            </div>
            <div class="@Constants.HtmlFormat.FORM_CONTROL_CLASS">
                @for (int i = 0; i < Model.ReturningIPs.Count; i++)
                {
                    <div class="col-xs-6">
                        @Html.DisplayFor(model => Model.ReturningIPs[i])<br/>
                        @Html.HiddenFor(model => model.ReturningIPs[i])
                    </div>
                    if (Model.RequestInfo.StatusCode == Constants.StatusCode.REQUEST_PROCESSING)
                    {
                        <div class="col-xs-6">
                            @Html.DropDownListFor(model => model.NewIPs[i], Model.NewIPsOptions)
                        </div>
                    }

                }
            </div>
        </div>
        <div class="@Constants.HtmlFormat.FORM_ROW_CLASS">
            <div class="@Constants.HtmlFormat.FORM_LABEL_CLASS">
            </div>
            <div class="@Constants.HtmlFormat.FORM_CONTROL_CLASS">
                @Html.HiddenFor(model => model.RequestInfo.RequestCode)
                @Html.HiddenFor(model => model.CustomerInfo.Customer)
                @Html.HiddenFor(x => x.RequestInfo.RequestType)
                @Html.HiddenFor(x => x.SelectedServer)
                @if (Model.RequestInfo.StatusCode == Constants.StatusCode.REQUEST_WAITING || Model.RequestInfo.StatusCode == Constants.StatusCode.REQUEST_PROCESSING)
                {
                    <button type="submit" id="btnApprove" name="@Constants.FormAction.ACTION_NAME" value="@Constants.FormAction.OK_ACTION" class="@Constants.HtmlFormat.PRIMARY_BUTTON_CLASS">
                        @Labels.Approve
                    </button>
                    <button type="submit" id="btnReject" name="@Constants.FormAction.ACTION_NAME" value="@Constants.FormAction.REJECT_ACTION" class="@Constants.HtmlFormat.DANGER_BUTTON_CLASS">
                        @Labels.Reject
                    </button>
                }
                else if (Model.RequestInfo.StatusCode == Constants.StatusCode.REQUEST_PENDING)
                {
                    <button type="submit" id="btnAccept" name="@Constants.FormAction.ACTION_NAME" value="@Constants.FormAction.OK_ACTION" class="@Constants.HtmlFormat.PRIMARY_BUTTON_CLASS">
                        @Labels.Accept
                    </button>
                }
            </div>
        </div>
    }
</section>
<script type="text/javascript">
    $(function () {
        //Get value of selected items
        $("#btnApprove").click(function () {
            var selectedValues = [];
            $("select option:selected").each(function () {
                selectedValues.push($(this).val());
            });
            $('#ips').val(selectedValues);
        });
    });
</script>
