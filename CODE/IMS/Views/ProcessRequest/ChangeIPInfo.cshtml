@model RequestIPViewModel
@{
    ViewBag.Title = "RequestChangeIPInfo";
}

<section class="content-header">
    <h1>
        Detail Request Change IP Address
    </h1>
    <ol class="breadcrumb">
        <li><a href="@Url.Action("Index", "Schedule")"><i class="fa fa-dashboard"></i> Home</a></li>
        <li class="active">Detail Request Change IP Address</li>
    </ol>
</section>
<section class="content">
    @using (Html.BeginForm("ProcessRequestChangeIp", "ProcessRequest", FormMethod.Post))
            {
        <div class="row">
            <div class="col-xs-6">
                <div class="row dl-horizontal">
                    <div class="col-xs-4">
                        Request Code
                    </div>
                    <div class="col-xs-8">
                        @Html.DisplayFor(model => model.RequestCode, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-4">
                        Current Status
                    </div>
                    <div class="col-xs-8">
                        @Html.DisplayFor(model => model.StatusName, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-4">
                        Requested Time
                    </div>
                    <div class="col-xs-8">
                        @Html.DisplayFor(model => model.RequestedTime, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-4">
                        Assignee
                    </div>
                    @if (Model.StatusCode == Constants.StatusCode.REQUEST_PENDING)
                    {
                        <div class="col-xs-8">
                            @Html.DropDownListFor(model => model.StaffCode, Model.AssignGroup, new { @class = Constants.HtmlFormat.FORM_INNER_CLASS })
                        </div>
                    }
                    else
                    {
                        <div class="col-xs-8">
                            @Html.ActionLink(Model.StaffName, "ViewProfile", "Account",
                                new { username = Model.StaffCode }, null)
                            @Html.HiddenFor(model => model.StaffCode, new { @class = "form-control" })
                        </div>
                    }
                </div>
            </div>
            <div class="col-xs-6">
                <div class="row">
                    <div class="col-xs-4">
                        Customer
                    </div>
                    <div class="col-xs-8">
                        @Html.ActionLink(Model.CustomerName, "ViewProfile", "Account", new { username = Model.Customer }, null)
                    </div>
                </div>
                @if (Model.Company != null)
                {
                    <div class="row">
                        <div class="col-xs-4">
                            Company Name
                        </div>
                        <div class="col-xs-8">
                            @Html.DisplayFor(model => model.Customer, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                }
                <div class="row">
                    <div class="col-xs-4">
                        Phone Number
                    </div>
                    <div class="col-xs-8">
                        @Html.DisplayFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
            </div>
        </div>
        <hr />
        <div class="row">
            <div class="col-xs-4">
                Selected server
            </div>
            <div class="col-xs-8">
                @Html.DisplayFor(model => model.SelectedServer, new { @class = "form-control" })
            </div>
        </div>
        <div class="row">
            <div class="col-xs-4">
                Note
            </div>
            <div class="col-xs-8">
                @Html.DisplayFor(model => model.Description, new { @class = "form-control" })
            </div>
        </div>
        <div class="row">
            <div class="col-xs-4">
                Selected IPs
            </div>
            <div class="col-xs-8">
                @for (int i = 0; i < Model.ReturningIps.Count; i++)
                {
                    <div class="col-md-10">
                        @Html.DisplayFor(model => Model.ReturningIps[i])
                        @Html.HiddenFor(model => model.ReturningIps[i])
                        <div class="selectedIP">
                            @Html.DropDownListFor(model => model.SelectedIps, Model.IpSelectListItems)
                        </div>
                    </div>
                }
            </div>
        </div>
        <div class="row">
            <div class="col-xs-12">
                @Html.HiddenFor(model => model.RequestCode)
                @Html.HiddenFor(model => model.Customer)
                @Html.HiddenFor(x => x.RequestType)
                @Html.HiddenFor(model => model.Ips, new { id = "ips" })
                @Html.HiddenFor(x => x.SelectedServer)
                @Html.HiddenFor(x => x.NumberOfIP, new { @ip = "IpNumber" })
                @if (Model.StatusCode == Constants.StatusCode.REQUEST_WAITING ||
                    Model.StatusCode == Constants.StatusCode.REQUEST_PROCESSING)
                {
                    //if (Model.StaffCode == Model.Username)
                    //{
                    <button type="submit" class="btn btn-primary" name="Approve">Approve</button>
                    <button type="submit" class="btn btn-danger" name="Reject">Reject</button>
                    //}
                }
                else if (Model.StatusCode == Constants.StatusCode.REQUEST_PENDING)
                {
                    <button type="submit" class="btn btn-primary" name="Accept">Accept</button>
                }
            </div>
        </div>
    }
</section>
<script type="text/javascript">
    $(function () {
        $('#availableIps').change(function () {
            //var pass = $('#availableIps').val();
            //$('#selectedIps').append('<option value="' + pass + '">' + pass + '</option>');
            //$("[id*=availableIps] option:selected").remove();
            //return false;
            //document.getElementById("selectedIps").value = pass;
        });

        var ips = $('.selectedIP').val();
        //DOING, 1 list select thi 2 list kia ko co gia tri nay
        $('.selectedIP').change(function () {
            var ip = $(this);

        });
        //Get value of selected items
        $("#btnApprove").click(function () {
            var selectedValues = [];
            $("select option:selected").each(function () {
                selectedValues.push($(this).val());
            });
            $('#ips').val(selectedValues);
        });
    });
</script>
