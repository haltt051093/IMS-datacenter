@model ProcessRequestReturnRackViewModel
@{
    ViewBag.Title = "RequestReturnRackInfo";
}

<section class="content-header">
    <h1>
        Detail Request Return Rack
    </h1>
    <ol class="breadcrumb">
        <li><a href="@Url.Action("Index", "Schedule")">><i class="fa fa-dashboard"></i> Home</a></li>
        Detail Request:
        <li class="active">Return Rack</li>
    </ol>
</section>
<section class="main-contentcontent">
    @using (Html.BeginForm("ProcessRequestReturnRack", "ProcessRequest", FormMethod.Post))
    {
        <div class="row">
            <div class="col-xs-6">
                <div class="row dl-horizontal">
                    <div class="col-xs-4">
                        Request Code
                    </div>
                    <div class="col-xs-8">
                        @Html.DisplayFor(model => model.RequestInfo.RequestCode, new {htmlAttributes = new {@class = "form-control"}})
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-4">
                        Current Status
                    </div>
                    <div class="col-xs-8">
                        @Html.DisplayFor(model => model.RequestInfo.StatusName, new {htmlAttributes = new {@class = "form-control"}})
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-4">
                        Requested Time
                    </div>
                    <div class="col-xs-8">
                        @Html.DisplayFor(model => model.RequestInfo.RequestedTime, new {htmlAttributes = new {@class = "form-control"}})
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-4">
                        Assignee
                    </div>
                    @if (Model.RequestInfo.StatusCode == Constants.StatusCode.REQUEST_PENDING)
                    {
                        <div class="col-xs-8">
                            @Html.DropDownListFor(model => model.RequestInfo.StaffCode, Model.StaffCodeOptions, new {@class = Constants.HtmlFormat.FORM_INNER_CLASS})
                        </div>
                    }
                    else
                    {
                        <div class="col-xs-8">
                            @Html.ActionLink(Model.RequestInfo.StaffName, "ViewProfile", "Account",
                                new {username = Model.RequestInfo.StaffCode }, null)
                            @Html.HiddenFor(model => model.RequestInfo.StaffCode, new {@class = "form-control"})
                        </div>
                    }
                </div>
            </div>
            <div class="col-xs-6">
                <div class="row">
                    <div class="col-xs-4">
                        Customer
                    </div>
                    <div class="col-xs-8">
                        @Html.ActionLink(Model.CustomerInfo.CustomerName, "ViewProfile", "Account", new {username = Model.CustomerInfo.Customer }, null)
                    </div>
                </div>
                @if (Model.CustomerInfo.Company != null)
                {
                    <div class="row">
                        <div class="col-xs-4">
                            Company Name
                        </div>
                        <div class="col-xs-8">
                            @Html.DisplayFor(model => model.CustomerInfo.Customer, new {htmlAttributes = new {@class = "form-control"}})
                        </div>
                    </div>
                }
                <div class="row">
                    <div class="col-xs-4">
                        Phone Number
                    </div>
                    <div class="col-xs-8">
                        @Html.DisplayFor(model => model.CustomerInfo.Phone, new {htmlAttributes = new {@class = "form-control"}})
                    </div>
                </div>
            </div>
        </div>
        <hr/>
        if (Model.RequestInfo.StatusCode == Constants.StatusCode.REQUEST_DONE)
        {
            <div clsas="row">
                <div class="col-xs-4">
                    Returned Racks
                </div>
                <div class="col-xs-8">
                    @foreach (var item in Model.SelectedRacks)
                    {
                        @Html.DisplayFor(model => item)
                        <br />
                    }
                </div>
            </div>
        }
        else
        {
            <div clsas="row">
                <div class="col-xs-4">
                    Returned Racks
                </div>
                <div class="col-xs-8">
                    @foreach (var item in Model.RackOfCustomer)
                    {
                        @Html.DisplayFor(model => item.Text)
                        @Html.HiddenFor(model => item.Value)
                        <br />
                    }
                </div>
            </div>
        }
        <div class="row">
            <div class="col-xs-4">
                Note
            </div>
            <div class="col-xs-8">
                @Html.DisplayFor(model => model.RequestInfo.Description, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>
        if (Model.RequestInfo.StatusCode == Constants.StatusCode.REQUEST_CANCELLED)
        {
            @ViewBag.Message
        }
        if (Model.RequestInfo.StatusCode == Constants.StatusCode.REQUEST_REJECTED)
        {
            @ViewBag.Message
        }
        <div class="row">
            <div class="col-xs-12">
                @Html.HiddenFor(model => model.RequestInfo.RequestCode)
                @Html.HiddenFor(model => model.RequestInfo.Customer)
                @Html.HiddenFor(x => x.RequestInfo.RequestType)
                @Html.HiddenFor(x => x.RackOfCustomer)
                @if (Model.RequestInfo.StatusCode == Constants.StatusCode.REQUEST_WAITING || Model.RequestInfo.StatusCode == Constants.StatusCode.REQUEST_PROCESSING)
                {
                    //if (Model.StaffCode == Model.Username)
                    //{
                    <button type="submit" class="btn btn-primary" name="Approve">Approve</button>
                    <button type="submit" class="btn btn-danger" name="Reject">Reject</button>
                    //}
                }
                else if (Model.RequestInfo.StatusCode == Constants.StatusCode.REQUEST_PENDING)
                {
                    <button type="submit" class="btn btn-primary" name="Accept">Accept</button>
                }
            </div>
        </div>
    }
</section>
