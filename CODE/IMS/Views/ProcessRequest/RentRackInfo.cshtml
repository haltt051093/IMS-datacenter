@model RequestRentRackViewModel

@{
    ViewBag.Title = "RequestRentRackInfo";
}

<section class="content-header">
    <h1>
        Detail Request Rent Rack
    </h1>
    <ol class="breadcrumb">
        <li><a href="@Url.Action("Index", "Schedule")">><i class="fa fa-dashboard"></i> Home</a></li>
        <li class="active">Detail Request Rent Rack</li>
    </ol>
</section>
<section class="main-content">
    @using (Html.BeginForm("ProcessRequestRentRack", "ProcessRequest", FormMethod.Post))
            {

        <div class="row">
            <div class="col-xs-6">
                <div class="row dl-horizontal">
                    <div class="col-xs-4">
                        Request Code
                    </div>
                    <div class="col-xs-8">
                        @Html.DisplayFor(model => model.RequestCode, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-4">
                        Current Status
                    </div>
                    <div class="col-xs-8">
                        @Html.DisplayFor(model => model.StatusName, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-4">
                        Requested Time
                    </div>
                    <div class="col-xs-8">
                        @Html.DisplayFor(model => model.RequestedTime, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-4">
                        Assignee
                    </div>
                    @if (Model.StatusCode == Constants.StatusCode.REQUEST_PENDING)
                    {
                        <div class="col-xs-8">
                            @Html.DropDownListFor(model => model.StaffCode, Model.AssignGroup, new { @class = Constants.HtmlFormat.FORM_INNER_CLASS })
                        </div>
                    }
                    else
                    {
                        <div class="col-xs-8">
                            @Html.ActionLink(Model.StaffName, "ViewProfile", "Account",
                                        new { username = Model.StaffCode }, null)
                            @Html.HiddenFor(model => model.StaffCode, new { @class = "form-control" })
                        </div>
                    }
                </div>
            </div>
            <div class="col-xs-6">
                <div class="row">
                    <div class="col-xs-4">
                        Customer
                    </div>
                    <div class="col-xs-8">
                        @Html.ActionLink(Model.CustomerName, "ViewProfile", "Account", new { username = Model.Customer }, null)
                    </div>
                </div>
                @if (Model.Company != null)
                {
                    <div class="row">
                        <div class="col-xs-4">
                            Company Name
                        </div>
                        <div class="col-xs-8">
                            @Html.DisplayFor(model => model.Customer, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                }
                <div class="row">
                    <div class="col-xs-4">
                        Phone Number
                    </div>
                    <div class="col-xs-8">
                        @Html.DisplayFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
            </div>
        </div>
        <hr />
        <div class="row">
            <div class="col-xs-4">
                Amount of racks
            </div>
            <div class="col-xs-8">
                @Html.DisplayFor(model => model.RackNumbers, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>
                <div class="row">
                    <div class="col-xs-4">
                        Note
                    </div>
                    <div class="col-xs-8">
                        @Html.DisplayFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
        if (Model.StatusCode == Constants.StatusCode.REQUEST_PROCESSING)
        {
            <div class="row">
                <div class="col-xs-4">
                    Select Row
                </div>
                <div class="col-xs-8">
                    @Html.DropDownListFor(m => m.SelectedRow, Model.ListRows, "Select All", new { @id = "selectedRow" })
                </div>
            </div>
            <div class="row">
                <div class="col-xs-12">
                    <table id="masterTable" class="table table-bordered table-striped">
                        <thead>
                            <tr>
                                <th>
                                    <input id="checkAll" type="checkbox" />
                                </th>
                                <th>Rack</th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.listRackByRows.Count; i++)
                            {
                                <tr class="check" row-code="@Model.listRackByRows[i].RowName">
                                    <td>
                                        @Html.CheckBoxFor(modelItem => modelItem.listRackByRows[i].Checked)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(model => Model.listRackByRows[i].RackName, new { @class = "form-control" })
                                        @Html.HiddenFor(model => Model.listRackByRows[i].RackName, new { @class = "form-control" })
                                        @Html.HiddenFor(model => Model.listRackByRows[i].RackCode, new { @class = "form-control" })
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        }
        if (Model.StatusCode == Constants.StatusCode.REQUEST_DONE)
        {
            <hr />
            <div class="row">
                <div class="col-xs-4">
                    Rented Rack(s)
                </div>
                <div class="col-xs-8">
                    @foreach (var item in Model.RentedRacks)
                    {
                        @Html.DisplayFor(model => item)
                        <br />
                    }
                </div>
            </div>
        }
        if (Model.StatusCode == Constants.StatusCode.REQUEST_CANCELLED)
        {
            @ViewBag.Message
        }
        if (Model.StatusCode == Constants.StatusCode.REQUEST_REJECTED)
        {
            @ViewBag.Message
        }
        <div class="row">
            <div class="col-xs-12">
                @Html.HiddenFor(model => model.RequestCode)
                @Html.HiddenFor(model => model.Customer)
                @if (Model.StatusCode == Constants.StatusCode.REQUEST_WAITING || Model.StatusCode == Constants.StatusCode.REQUEST_PROCESSING)
                {
                    //if (Model.StaffCode == Model.Username)
                    //{
                    <button type="submit" class="btn btn-primary" name="Approve">Approve</button>
                    <button type="submit" class="btn btn-danger" name="Reject">Reject</button>
                    //}
                }
                else if (Model.StatusCode == Constants.StatusCode.REQUEST_PENDING)
                {
                    <button type="submit" class="btn btn-primary" name="Accept">Accept</button>
                }
            </div>
        </div>
    }
</section>
<script type="text/javascript">
    $('#masterTable').dataTable({
        dom: 't',
        ordering: false,
        searching: false
    });

    $("#checkAll").change(function () {
        var state = $('#checkAll').is(':checked');
        $('tr.check input[type="checkbox"]').prop('checked', state);
    });

    $("#selectedRow").change(function () {
        var rowCode = $("#selectedRow").val();
        if (rowCode == null || rowCode == '') {
            $('#masterTable tbody tr').show();
        } else {
            $('#masterTable tbody tr').hide();
            $('#masterTable tbody tr[row-code="' + rowCode + '"]').show();
        }
    });
</script>