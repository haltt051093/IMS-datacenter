@model IPChangeStatusViewModel
@using IMS.Data.Business

@{
    ViewBag.Title = "ChangeStatus";
}

<h2>ChangeIPStatus</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Account</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.Staff)
        @Html.HiddenFor(model => model.IPAddress)
        @Html.HiddenFor(model => model.RegisteredDate)
        @Html.HiddenFor(model => model.Subnetmask)
        @Html.HiddenFor(model => model.Gateway)
        @Html.HiddenFor(model => model.IsDefault)

        <div class="form-group">
            @Html.LabelFor(model => model.IPAddress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.EditorFor(model => model.IPAddress, new { htmlAttributes = new { @class = "form-control", @disabled = "true" } })

            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Gateway, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.EditorFor(model => model.Gateway, new { htmlAttributes = new { @class = "form-control", @disabled = "true" } })

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Subnetmask, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.EditorFor(model => model.Subnetmask, new { htmlAttributes = new { @class = "form-control", @disabled = "true" } })

            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.RegisteredDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.EditorFor(model => model.RegisteredDate, new { htmlAttributes = new { @class = "form-control", @disabled = "true" } })

            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.IsDefault, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.EditorFor(model => model.IsDefault, new { htmlAttributes = new { @disabled = "true" } })

            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    IEnumerable<SelectListItem> tau = new List<SelectListItem>();
                    if (Model.StatusCode == "STATUS10")
                    {
                        tau = new List<SelectListItem>()
                        {
                            new SelectListItem()
                            {
                                Text = "Available",
                                Value = "STATUS10"
                            },
                            new SelectListItem()
                            {
                                Text = "Used",
                                Value = "STATUS11"
                            },
                            new SelectListItem()
                            {
                                Text = "Blocked",
                                Value = "STATUS12"
                            }
                        };
                    }
                    else if (Model.StatusCode == "STATUS11")
                    {
                        tau = new List<SelectListItem>()
                        {
                            new SelectListItem()
                            {
                                Text = "Used",
                                Value = "STATUS11"
                            },
                            new SelectListItem()
                            {
                                Text = "Available",
                                Value = "STATUS10"
                            },
                            new SelectListItem()
                            {
                                Text = "Blocked",
                                Value = "STATUS12"
                            }
                        };
                    }
                    else
                    {
                        tau = new List<SelectListItem>()
                        {
                            new SelectListItem()
                            {
                                Text = "Blocked",
                                Value = "STATUS12"
                            },
                            new SelectListItem()
                            {
                                Text = "Used",
                                Value = "STATUS11"
                            },
                            new SelectListItem()
                            {
                                Text = "Available",
                                Value = "STATUS10"
                            }

                        };
                    }

                    SelectList status = new SelectList(tau, "Value", "Text", Model.StatusCode);
                }
                @Html.DropDownList("StatusCode", status, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StatusCode, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
                    }

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
