@using AutoMapper.Internal
@using IMS.Data.Repository
@model IMS.Models.IPIndexViewModel

@{
    ViewBag.Title = "AssignIP";
}

<h2>List of suitable IP Addresses</h2>


    @using (Html.BeginForm("AssignIP", "IP", FormMethod.Get))
    {

        <b>Search By:</b>

            <br />
            <text>Gateway</text>
            @Html.DropDownList("GatewaySearch", "--Select--")
            <br />
            <input type="submit" value="Search" />
    }


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Request)
        @Html.HiddenFor(model => model.ServerCode)
        @Html.HiddenFor(model => model.OldIP)
        <div class="form-group">
            <label>Amount of Available IP Address:</label>
            @Model.IPs.Count
        </div>
        <table class="table">
            <tr>
                <th>
                    @Html.Raw("IPAddress")
                </th>
                <th>
                    @Html.Raw("Gateway")
                </th>
                <th>
                    @Html.Raw("Subnetmask")
                </th>
                <th>
                    @Html.Raw("RegisteredDate")
                </th>
                <th>

                </th>
            </tr>

            @for (var i = 0; i < Model.IPs.Count; i++)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(x => x.IPs[i].IPAddress)
                    </td>
                    <td>
                        @Html.DisplayFor(x => x.IPs[i].Gateway)
                    </td>
                    <td>
                        @Html.DisplayFor(x => x.IPs[i].Subnetmask)
                    </td>
                    <td>
                        @Html.DisplayFor(x => x.IPs[i].RegisteredDate)
                    </td>
                    <td>
                        @Html.RadioButtonFor(x => x.NewIP, Model.IPs[i].IPAddress)
                        @*@if (Model.Request.Equals("Change"))
                        {
                            if (Model.IPs[i].StatusName.Equals("Available"))
                            {
                                @Html.RadioButtonFor(x => x.NewIP, Model.IPs[i].IPAddress)
                            }
                        }
                        else if (Model.Request.Equals("AddIPForNewServer"))
                        {
                            if (Model.IPs[i].StatusName.Equals("Available"))
                            {
                                @Html.RadioButtonFor(x => x.NewIP, Model.IPs[i].IPAddress)
                            }
                        }
                        else
                        {
                            if (Model.IPs[i].StatusName.Equals("Available"))
                            {
                                @Html.HiddenFor(x => x.ListNewIP[i].Value)
                                @Html.CheckBoxFor(x => x.ListNewIP[i].Selected)
                                ;
                            }
                        }*@


                    </td>



                </tr>
            }

        </table>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}
