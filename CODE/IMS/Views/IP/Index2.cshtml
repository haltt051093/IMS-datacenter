@model IMS.Models.IPIndexViewModel
@{
    ViewBag.Title = Pages.IPIndex;
    ViewBag.PageTitle = Pages.IPIndex;
    ViewBag.Role = "Shift Head";
    ViewBag.Breadcrumbs = new List<BreadcrumbModel>
    {
        new BreadcrumbModel("Home", "Index", Pages.Home),
        new BreadcrumbModel("IP", "Index2", Pages.IPIndex)
    };
}

<!-- Main content -->
<section class="main-content">
    <div>
        <a class="btn btn-primary pull-left" data-toggle="modal" data-target="#addip-modal"><i class="fa fa-plus"></i> @Labels.AddIP</a>
    </div>
   
    <div>
        <a class="btn btn-danger pull-left" data-toggle="modal" data-target="#deactivateip-modal"><i class="fa fa-minus"></i> @Labels.DeactivateIP</a>
    </div>
    <div class="clearfix"></div>
    <div style="height: 10px"></div>
    <div class="row hide">
        <div id="dropdown-template" class="col-xs-3">
            <label>IP Address: @Html.DropDownListFor(model => model.NetworkIP, Model.NetworkIPs, "All IP Addresses", new { @class = "form-control input-sm", style = "width: 150px" }) </label>
        </div>
    </div>
    <table id="example1" class="table table-bordered table-hover">
        <thead>
            <tr style="background-color: #404040">
                <th><span style="color: ghostwhite">Id</span>
                <th><span style="color: ghostwhite">NetworkIP</span>
                <th><span style="color: ghostwhite">IP Address</span>
                <th><span style="color: ghostwhite">Gateway</span>
                <th><span style="color: ghostwhite">Subnet mask</span>
                <th><span style="color: ghostwhite">Status</span>
                <th></th>
            </tr>
        </thead>
        <tfoot>
            <tr style="background-color: #404040">
                <th><span style="color: ghostwhite">Id</span>
                <th><span style="color: ghostwhite">NetworkIP</span>
                <th><span style="color: ghostwhite">IP Address</span>
                <th><span style="color: ghostwhite">Gateway</span>
                <th><span style="color: ghostwhite">Subnet mask</span>
                <th><span style="color: ghostwhite">Status</span>
                <th></th>

            </tr>
        </tfoot>
    </table>
</section><!-- /.content -->

<!-- ADD IP MODAL -->
<div id="addip-modal" class="@Constants.HtmlFormat.MODAL_CLASS" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            @using(Html.BeginForm())
            {
                <div class="modal-header">
                    <div class="@Constants.HtmlFormat.MODAL_HEADER_CLASS"><i class="fa fa-plus"></i> @Labels.AddIP</div>
                </div>
                <div class="modal-body">
                    <div class="@Constants.HtmlFormat.MODAL_ROW_CLASS">
                        <div class="@Constants.HtmlFormat.MODAL_LABEL_CLASS">
                            @Html.LabelFor(model => model.Address)
                        </div>
                        <div class="@Constants.HtmlFormat.MODAL_CONTROL_CLASS">
                            @Html.TextBoxFor(model => model.Address, new { @class = Constants.HtmlFormat.FORM_INNER_CLASS })
                            @Html.ValidationMessageFor(model => model.Address)
                        </div>
                    </div>
                    <div class="@Constants.HtmlFormat.MODAL_ROW_CLASS">
                        <div class="@Constants.HtmlFormat.MODAL_LABEL_CLASS">
                            @Html.LabelFor(model => model.Netmask)
                        </div>
                        <div class="@Constants.HtmlFormat.MODAL_CONTROL_CLASS">
                            @Html.DropDownListFor(model => model.Netmask, Model.ListNetmask, new { @class = Constants.HtmlFormat.FORM_INNER_CLASS })
                        </div>
                    </div>
                    

                </div>
                <div class="modal-footer">
                    <button type="submit" name="@Constants.FormAction.ACTION_NAME" value="Add" class="@Constants.HtmlFormat.PRIMARY_BUTTON_CLASS">
                        @Labels.DialogOK
                    </button>
                    <button type="button" name="@Constants.FormAction.ACTION_NAME" value="@Constants.FormAction.CANCEL_ACTION" class="@Constants.HtmlFormat.DEFAULT_BUTTON_CLASS"
                            data-dismiss="modal">
                        @Labels.DialogCancel
                    </button>

                </div>
            }
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->
<!-- DEACTIVATE IP MODAL -->
<div id="deactivateip-modal" class="@Constants.HtmlFormat.MODAL_CLASS" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog" style="width: 300px">
        <div class="modal-content">
            @using (Html.BeginForm())
            {
                <div class="modal-header">
                    <div class="@Constants.HtmlFormat.MODAL_HEADER_CLASS"><i class="fa fa-plus"></i> @Labels.DeactivateIP</div>
                </div>
                <div class="modal-body">
                    <div class="pull-left">
                        <h3>Select Network IP to deactivate:</h3>
                    </div>
                    <div class="@Constants.HtmlFormat.MODAL_ROW_CLASS">

                        @for (int i = 0; i < Model.NetworkIPs.Count; i++)
                        {
                            <div class="@Constants.HtmlFormat.MODAL_CONTROL_CLASS">
                                @Html.HiddenFor(model => model.NetworkIPs[i].Value)
                                @Html.CheckBoxFor(model => model.NetworkIPs[i].Selected)
                                @Html.DisplayFor(model => model.NetworkIPs[i].Text)
                            </div>
                        }

                    </div>
                    <div class="@Constants.HtmlFormat.MODAL_ROW_CLASS">
                        <div class="@Constants.HtmlFormat.MODAL_LABEL_CLASS">
                            @Html.LabelFor(model => model.Confirm)
                        </div>
                        <div class="@Constants.HtmlFormat.MODAL_CONTROL_CLASS">
                            @Html.TextBoxFor(model => model.Confirm, new { @class = Constants.HtmlFormat.FORM_INNER_CLASS, placeholder="Input OK to Confirm"})
                            @Html.ValidationMessageFor(model => model.Confirm)
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" name="@Constants.FormAction.ACTION_NAME" value="Deactive" class="@Constants.HtmlFormat.PRIMARY_BUTTON_CLASS">
                        @Labels.DialogOK
                    </button>
                    <button type="button" name="@Constants.FormAction.ACTION_NAME" value="@Constants.FormAction.CANCEL_ACTION" class="@Constants.HtmlFormat.DEFAULT_BUTTON_CLASS"
                            data-dismiss="modal">
                        @Labels.DialogCancel
                    </button>

                </div>
            }
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->



<div id="blockip-modal" class="@Constants.HtmlFormat.MODAL_CLASS" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            @using (Html.BeginForm("ChangeIPStatus","IP"))
            {
                <div class="modal-header">
                    <div class="@Constants.HtmlFormat.MODAL_HEADER_CLASS"><i class="fa fa-plus"></i> @Labels.BlockIP</div>
                </div>
                <div class="modal-body">
                    <div class="@Constants.HtmlFormat.MODAL_ROW_CLASS">
                        <div class="@Constants.HtmlFormat.MODAL_MESSAGE_CLASS">
                            @Messages.BlockIPWarning?
                        </div>
                    </div>
                    <div class="@Constants.HtmlFormat.MODAL_ROW_CLASS">
                        <div class="@Constants.HtmlFormat.MODAL_LABEL_CLASS">
                            @Html.LabelFor(model => model.Description)
                        </div>
                        <div class="@Constants.HtmlFormat.MODAL_CONTROL_CLASS">
                            @Html.TextBoxFor(model => model.Description, new { @class = Constants.HtmlFormat.FORM_INNER_CLASS })
                        </div>
                    </div>
                    <input class="hidden" name="Id" id="idblock"/>
                </div>
                <div class="modal-footer">
                    <button type="button" name="@Constants.FormAction.ACTION_NAME" value="@Constants.FormAction.CANCEL_ACTION" class="@Constants.HtmlFormat.DEFAULT_BUTTON_CLASS"
                            data-dismiss="modal">
                        @Labels.DialogCancel
                    </button>
                    <button type="submit" name="@Constants.FormAction.ACTION_NAME" value="@Constants.FormAction.OK_ACTION" class="@Constants.HtmlFormat.PRIMARY_BUTTON_CLASS">
                        @Labels.DialogOK
                    </button>
                </div>
            }
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

<div id="unblockip-modal" class="@Constants.HtmlFormat.MODAL_CLASS" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            @using (Html.BeginForm("ChangeIPStatus","IP"))
            {
                <div class="modal-header">
                    <div class="@Constants.HtmlFormat.MODAL_HEADER_CLASS"><i class="fa fa-plus"></i> @Labels.UnblockIP</div>
                </div>
                <div class="modal-body">
                    <div class="@Constants.HtmlFormat.MODAL_ROW_CLASS">
                        <div class="@Constants.HtmlFormat.MODAL_MESSAGE_CLASS">
                            @Messages.UnblockIPWarning?
                        </div>
                    </div>
                    <div class="@Constants.HtmlFormat.MODAL_ROW_CLASS">
                        <div class="@Constants.HtmlFormat.MODAL_LABEL_CLASS">
                            @Html.LabelFor(model => model.Description)
                        </div>
                        <div class="@Constants.HtmlFormat.MODAL_CONTROL_CLASS">
                            @Html.TextBoxFor(model => model.Description, new { @class = Constants.HtmlFormat.FORM_INNER_CLASS })
                        </div>
                    </div>
                    <input name  ="Id" Id="idunblock" class="hidden"/>
                </div>
                <div class="modal-footer">
                    <button type="button" name="@Constants.FormAction.ACTION_NAME" value="@Constants.FormAction.CANCEL_ACTION" class="@Constants.HtmlFormat.DEFAULT_BUTTON_CLASS"
                            data-dismiss="modal">
                        @Labels.DialogCancel
                    </button>
                    <button type="submit" name="@Constants.FormAction.ACTION_NAME" value="@Constants.FormAction.OK_ACTION" class="@Constants.HtmlFormat.PRIMARY_BUTTON_CLASS">
                        @Labels.DialogOK
                    </button>
                </div>
            }
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

<!-- page script -->
<script>
    $.fn.dataTable.ext.search.push(
        function (settings, data, dataIndex) {
            var networkIP = $('#NetworkIP').val();
            if (networkIP == '') {
                return true;
            }
            if (networkIP == data[1]) {
                return true;
            }
            return false;
        }
    );
</script>

<script type="text/javascript">
    var table = $('#example1').DataTable({
        dom: '<lf<t>ip>',
        processing: true,
        ajax: "@Url.Action("GetAll", "IP", new {httproute = ""})",
        columns: [
            { data: "Id" },
            { data: "NetworkIP" },
            { data: "IPAddress" },
            { data: "Gateway" },
            { data: "Subnetmask" },
            { data: "StatusName" },
            { data: "StatusCode" }
        ],
        iDisplayLength: 32,
        aLengthMenu: [[32, 64, 128, 255], [32, 64, 128, 255]],
        fnRowCallback: function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {
            var row = $(nRow);
            var actionCell = $(nRow.cells[4]);
            switch (aData.StatusCode) {
                case '@Constants.StatusCode.IP_AVAILABLE':
                    actionCell.html('<a href="#">Block IP</a>');
                    actionCell.find('a').click(function () {
                        $('#blockip-modal').modal('show');
                        $('#idblock').val(aData.Id);
                        return false;
                    });
                    break;
                case '@Constants.StatusCode.IP_BLOCKED':
                    actionCell.html('<a href="#">Unblock IP</a>');
                    actionCell.find('a').click(function () {
                        $('#unblockip-modal').modal('show');
                        $('#idunblock').val(aData.Id);
                        return false;
                    });
                    break;
                case '@Constants.StatusCode.IP_RESERVE':
                    row.css('background-color', '#ffe6e6');
                    actionCell.html('');
                    break;
                case '@Constants.StatusCode.IP_USED':
                    actionCell.html('');
                    break;
                case '@Constants.StatusCode.IP_DEACTIVATE':
                    actionCell.html('');
                    break;
            }
        },
        order: [[0, "asc"]],
        columnDefs: [{
            targets: [0],
            visible: false,
            searchable: true
        }, {
            targets: [1],
            visible: false,
            searchable: true
        }, {
            targets: [6],
            orderable: false
        }]
    });

    $('#example1_filter').append($('#dropdown-template').html());
    $('#dropdown-template').html('');

    $('#NetworkIP').change(function () {
        table.draw();
    });


</script>

@section Styles {
    <style>
    </style>
}
@*<script>
        $(document).on("click", ".open-blockIP-modal", function () {
         var myId = $(this).data('id');
         $(".modal-footer #ipid").val( myId );

    });
    </script>*@
