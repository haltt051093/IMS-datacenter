@model IMS.Models.LocationIndexViewModel
@{
    ViewBag.Title = "LocationPage";
    ViewBag.Role = "Shift Head";
}

<section class="content-header">
    <h1>
        List of Location
    </h1>
    <ol class="breadcrumb">
        <li><a href="@Url.Action("Index2", "Schedule")"><i class="fa fa-dashboard"></i> Home</a></li>
        <li class="active">Location</li>
    </ol>
</section>
<section class="content">
    <a class="btn btn-primary pull-left" data-toggle="modal" data-target="#addlocation-modal"><i class="fa fa-plus"></i> Add new rack</a>
</section>
<!-- Main content -->
<section class="content">
    <div class="box">
        <div class="box-body table-responsive">
            <table id="example1" class="table table-bordered table-striped">
                <thead>
                    <tr>
                        <th>Location Code</th>
                        <th>Rack Name</th>
                        <th>Rack Unit</th>
                        <th>Status</th>
                        <th>Server Code</th>
                    </tr>
                </thead>
                <tbody>
                    @{

                        for (int i = 0; i < Model.Locations.Count; i++)
                        {
                            var item = Model.Locations[i];
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.LocationCode)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.RackName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.RackUnit)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.StatusName)
                                </td>
                                <td>
                                    @if (item.ServerCode != null)
                                    {
                                        @Html.ActionLink(item.ServerCode, "ServerDetails", "Server", new { id = item.Id }, null)
                                    }

                                </td>

                            </tr>
                        }
                    }
                </tbody>
                <tfoot>
                    <tr>
                        <th>Location Code</th>
                        <th>Rack Name</th>
                        <th>Rack Unit</th>
                        <th>Status</th>
                        <th>Server Code</th>

                    </tr>
                </tfoot>
            </table>
        </div><!-- /.box-body -->
    </div><!-- /.box -->

</section><!-- /.content -->
<!-- ADD LOCATION MODAL -->
<div class="modal fade" id="addlocation-modal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog" style="width: 300px">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title"><i class="fa fa-plus"></i> Add new rack</h4>
            </div>
            <form action="#" method="post">
                <div class="modal-body">
                    <div class="form-group">
                        @Html.Label("Rack Name", htmlAttributes: new { @class = "control-label" })


                        @Html.EditorFor(model => model.RackName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Ex: A1, B1,...", @id = "rackname" } })
                        @Html.ValidationMessageFor(model => model.RackName, "", new { @class = "text-danger" })

                    </div>
                    <div class="form-group">
                        @Html.Label("Power(KW)", htmlAttributes: new { @class = "control-label" })
                        <div class="form-group" style="width: 100px">
                            @{
                                IEnumerable<SelectListItem> power = new List<SelectListItem>()
                        {
                            new SelectListItem()
                            {
                                Text = "3",
                                Value = "3"
                            },
                            new SelectListItem()
                            {
                                Text = "4",
                                Value = "4"
                            },
                            new SelectListItem()
                            {
                                Text = "5",
                                Value = "5"
                            },
                            new SelectListItem()
                            {
                                Text = "6",
                                Value = "6"
                            },
                            new SelectListItem()
                            {
                                Text = "7",
                                Value = "7"
                            },
                            new SelectListItem()
                            {
                                Text = "8",
                                Value = "8"
                            },
                            new SelectListItem()
                            {
                                Text = "9",
                                Value = "9"
                            },
                            new SelectListItem()
                            {
                                Text = "10",
                                Value = "10"
                            }
                        };
                                SelectList power1 = new SelectList(power, "Value", "Text", Model.MaximumPower);
                            }

                            @Html.DropDownList("MaximumPower", power1, htmlAttributes: new { @class = "form-control", @id = "power" })
                            @Html.ValidationMessageFor(model => model.MaximumPower, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>
                <div class="modal-footer clearfix">

                    <button type="button" class="btn btn-danger" data-dismiss="modal"><i class="fa fa-times"></i> Cancel</button>

                    <button type="submit" class="btn btn-primary pull-left"><i class="fa fa-plus"></i> Add</button>
                </div>
            </form>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->
<!-- page script -->
<script type="text/javascript">
    $(function() {
        $("#example1").dataTable();

    });
</script>
<script type="text/javascript">
    $('#submit').on('click', function () {
        valid = true;
        if ($('#rackname').val() == '') {
            alert("please enter Rack Name");
            valid = false;
        }

        if ($('#rackname').val() != /^([A-Z]+[1-9])/) {
            alert("please enter follow Ex");
            valid = false;
        }
    });
</script>

