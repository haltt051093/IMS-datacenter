@using IMS.Data.Models
@using IMS.Data.ViewModels
@model IMS.Models.LocationIndexViewModel
@{
    ViewBag.Title = "AssignLocation";
}


@using (Html.BeginForm())
{

    <section class="content-header">
        <h1>
            List of Location Available
        </h1>
    </section>



    <section class="content">
        @if (Model.Notice == "HaveRack")
        {
            <div class="row hide">
                <div id="dropdown-template" class="col-xs-3">
                    <label>Location of Datacenter: @Html.DropDownListFor(model => model.RackCode1, Model.Racks1,"--Select--", new { @class = "form-control input-sm", style = "width: 150px" }) </label>
                    <label>Location of Customer: @Html.DropDownListFor(model => model.RackCode, Model.Racks,"--Select--", new {@class = "form-control input-sm", style = "width: 150px"}) </label>

                </div>
                
            </div>
        }
        else
        {
            <div class="row hide">
                <div id="dropdown-template" class="col-xs-3">
                    <label>Location: @Html.DropDownListFor(model => model.RackCode, Model.Racks, new { @class = "form-control input-sm", style = "width: 150px" }) </label>
                </div>
            </div>
        }


        <table id="example1" class="table table-bordered table-hover">
            <thead>
            <tr style="background-color: #404040">
                <th><h4 style="color: ghostwhite">Rack Code</h4>
                <th><h4 style="color: ghostwhite">Rack Name</h4>
                <th><h4 style="color: ghostwhite">Rack Unit</h4></th>
                <th><h4 style="color: ghostwhite">Server Code</h4></th>
                <th></th>
            </tr>
            </thead>
        </table>

    </section><!-- /.content -->

    <section class="content">
        @Html.HiddenFor(model=>model.RequestCode)
        @Html.HiddenFor(model=>model.RequestType)
        @Html.HiddenFor(model=>model.Size)
        @Html.ActionLink("Cancel", "Detais", "ProcessRequest", new {rType = Model.RequestType, rCode = Model.RequestCode}, htmlAttributes: new {@class = "btn btn-default pull-right"})
        <button type="submit" class="btn btn-primary pull-right">Assign</button>
    </section>


}
<script>
    $.fn.dataTable.ext.search.push(
        function(settings, data, dataIndex) {
            var rackCode = $('#RackCode').val();
            var rackCode1 = $('#RackCode1').val();
            if (rackCode == '') {
                return false;
            }
            if (rackCode == data[0]) {
                return true;
            }
            if (rackCode1 == data[0]) {
                return true;
            }
            if (rackCode1 == '') {
                return false;
            }

        }
    );
</script>

<script type="text/javascript">
    var table = $('#example1').DataTable({
        language: {
            "zeroRecords": "<label style='color:coral'>Please select Rack to have respective Locations!</label>"
        },
        dom: '<lf<t>ip>',
        processing: true,
        ajax: "@Url.Action("GetLocationForAssign", "Location", new {httproute = "", code = Model.ServerCode})",
        columns: [
            { data: "RackCode" },
            { data: "RackName" },
            { data: "RackUnit" },
            { data: "ServerCode" },
            { data: "LocationCode" }
        ],
        iDisplayLength: 42,
        bLengthChange: false,
      
        fnRowCallback: function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {
            var row = $(nRow);
            var actionCell = $(nRow.cells[3]);
            actionCell.html('');
            actionCell.append('<input type="hidden" name="Selected[' + iDisplayIndex + '].LocationCode" value="' + aData.LocationCode + '">');
            switch (aData.StatusName) {
                case 'Free':
                    actionCell.append('<input type="checkbox" name="Selected[' + iDisplayIndex + '].IsSelected" value="true"/>');

                    break;
                default:
                    actionCell.append('<input type="checkbox" name="Selected[' + iDisplayIndex + '].IsSelected" value="true"/>');
                    break;

            }
            switch (aData.ServerCode) {
            case '@Model.ServerCode':
                row.css('background-color', '#ffe6e6');              
                break;
            
            }
        },
        order: [[1, "acs"], [2, "desc"]],
        columnDefs: [{
        targets: [0],
        visible: false,
        searchable: true
        }]
       
    });

    $('#example1_filter').append($('#dropdown-template').html());
    $('#dropdown-template').html('');

    $('#RackCode1').change(function () {
        table.draw();
    });
    $('#RackCode').change(function () {
        table.draw();
    });
   

</script>

<script>
    $(document).on("click", ".open-blockIP-modal", function () {
        var code = $(this).data('id');
        var size = $(this).data('id1');

        $(".modal-footer #servercode").val(code);
        $(".modal-footer #size").val(size);



    });
</script>


